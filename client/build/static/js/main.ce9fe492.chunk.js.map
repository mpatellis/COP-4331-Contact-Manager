{"version":3,"sources":["components/auth/index.js","components/drawerStyle.js","components/Pieces.js","App.js","index.js"],"names":["token","JWT","get","axios","defaults","headers","common","Login","username","password","a","Res","Error","then","res","data","exists","user","post","validate","keep","forget","catch","err","console","log","error","searchContacts","usernameFree","Register","email","isEmail","getUserInfo","updateUserInfo","undefined","put","sendVerificationEmail","verifyUser","code","n","addContact","contact","search","updateContactById","id","body","deleteContactById","delete","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","textField","marginLeft","button","margin","content","contentShift","position","borderRadius","shape","backgroundColor","fade","palette","white","breakpoints","up","grow","searchIcon","height","pointerEvents","inputInput","expansionWidith","expansionHeading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fab","extendedIcon","contactDeleteButton","emailTextField","emailCodeInput","color","div1","PersistentDrawerRight","classes","React","useState","open","setOpen","hasAccount","setHasAccount","isLogedIn","setIsLogedIn","isVerified","setVerification","setError","contacts","setContacts","render","setRender","lastSearch","setLastSearch","User","setUser","emailCode","toggleHasAccount","ErrorLink","props","name","Link","component","variant","onClick","handleSearch","EditContact","firstName","lastName","phone","values","setValues","handleChange","event","target","value","anchorEl","setAnchorEl","handleClose","Boolean","IconButton","size","className","aria-label","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","TextField","label","type","onChange","Button","_id","handleVerifyClick","check","CssBaseline","AppBar","clsx","Toolbar","noWrap","InputBase","placeholder","inputRoot","input","inputProps","e","searchButton","Fab","edge","map","item","index","key","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","ExpansionPanelDetails","Snackbar","ContentProps","message","action","InputProps","vartiant","Drawer","anchor","paper","autoComplete","usr","val","defaultValue","readOnly","isVerifiedStr","Object","keys","length","App","exact","path","Pieces","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ce9fe492.chunk.js","sourcesContent":["import {isEmail} from 'validator'\nimport axios from 'axios'\nimport JWT from 'jwt-client'\n\nvar token = JWT.get()\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\nvar Login = async(username,password) => {\n    var Res = {Error: {}}\n    if (!username) {\n        Res.Error.username = 'Please enter your username'\n    } else {\n        await axios.get(`user/username/${username}`)\n        .then(async res => {\n            if (!res.data.exists) {\n                Res.Error.username = 'Username does not exist'\n            } else if (!password) {\n                Res.Error.password = 'Please enter your password'\n            } else {\n                // login\n                var user = {username: username, password: password}\n                await axios.post('user/login', user)\n                .then(res => {\n                    if (res.data.token) if (JWT.validate(res.data.token)) {\n                        JWT.keep(res.data.token);\n                      } else {\n                        JWT.forget();\n                      };\n                })\n                .catch(err => {\n                    Res.Error.password = 'Incorect Password'\n                    return Res\n                })\n            }\n            return Res\n            })\n        .catch(err => {\n            console.log(';(')\n            console.error(err)\n        })\n    } \n    searchContacts()\n    return Res\n}\n\nvar usernameFree = async (username) => {\n    var Res \n    await axios.get(`user/username/${username}`)\n        .then(res => {\n            if (res.data.exists) {\n                Res = res.data.exists\n            } else Res = false\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar Register = async(username, email, password) => {\n    var Res = {Error: {}}\n    if (!username) {\n        Res.Error.username = 'Please enter your username'\n    } else {\n        await axios.get(`user/username/${username}`)\n        .then(async res => {\n            if (res.data.exists) {\n                Res.Error.username = 'Username is taken'\n            } else if (!email || !isEmail(email)) {\n                Res.Error.email = 'Please enter a valid email'\n            } else if (!password) {\n                Res.Error.password = 'Please enter a password'\n            } else {\n                // register\n                var user = {username: username, email: email, password: password}\n                await axios.post('user/register', user)\n                .then(res => {\n                    console.log('succcess')\n                })\n                .catch(err => {\n                    Res.Error.password = 'Incorect Password'\n                    return Res\n                })\n            }\n            return Res\n            })\n        .catch(err => {\n            console.log(';(')\n            console.error(err)\n        })\n    } \n    return Res\n}\n\n\n\nvar getUserInfo = async() => {\n    var Res\n    await axios.get('/user')\n        .then( res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar updateUserInfo = async (user) => {\n    var Res ={Error: {}}\n    if (user.username)\n        await usernameFree(user.username)\n            .then(async res => {\n                if (res) {\n                    Res.Error = 'Username already taken'\n                    user.username = undefined\n                    await axios.put('/user', user)\n                        .then( res => {\n                            console.log(res.data)\n                            Res.data = res.data\n                        })\n                        .catch()\n                } else {\n                    await axios.put('/user', user)\n                        .then( res => {\n                            console.log(res.data)\n                            Res.data = res.data\n                        })\n                        .catch()\n                }\n            }).catch()    \n    return Res\n}\n\nvar deleteUser = async () => {\n    var Res\n    await axios.delete('/user')\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n// returns true if user is verified\nvar isVerified = async (user) => {\n    var Res\n    await axios.get('/user/isverified', user)\n        .then( res => {\n            console.log(res.data.isVerified)\n            if (res.data.isVerified)\n                return res.data.isVerified\n            Res = false\n        })\n        .catch()\n    return Res\n}\n\nvar sendVerificationEmail = async () => {\n    var Res\n    await axios.get('/user/verify')\n        .then( res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n}\n\n// returns true if correct code\nvar verifyUser = async (code) => {\n    var Res\n    await axios.put('/user/verify',{code: code})\n        .then( res => {\n            console.log(!!res.data.n)\n            Res = !!res.data.n\n        })\n        .catch()\n    return Res\n}\n\n\n\nvar addContact = async (contact) => {\n    var Res\n    await axios.post('/contacts', contact)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar getAllContacts = async () => {\n    var Res\n    await axios.get('/contacts')\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar searchContacts = async (search) => {\n    var Res\n    await axios.post('/contacts/search', {search: search})\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n        return Res\n}\n\nvar getContactById = async (id) => {\n    var Res\n    await axios.get(`/contacts/id/${id}`,)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar updateContactById = async (id, body) => {\n    var Res\n    await axios.put(`/contacts/id/${id}`, body)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar deleteContactById = async (id) => {\n    var Res\n    await axios.delete(`/contacts/id/${id}`)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nexport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\n    isVerified, sendVerificationEmail, verifyUser, addContact,\n    getAllContacts, searchContacts, getContactById, updateContactById,\n    deleteContactById }","import {\n    fade,\n    makeStyles,\n    Theme,\n    createStyles\n  } from \"@material-ui/core/styles\";\n  // import { amber, green } from '@material-ui/core/colors';\n\n  \nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: drawerWidth\n    },\n    title: {\n      flexGrow: 0\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-start\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginRight: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: 0\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      }\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 1),\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: 200\n      }\n    },\n    expansionWidith: {\n      width: \"100%\"\n    },\n    expansionHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    contactDeleteButton: {\n      margin: theme.spacing(0),\n    },\n    emailTextField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    emailCodeInput: {\n      color: \"white\"\n    },\n    div1: {\n      padding: theme.spacing(1, 1, 1, 7),\n      width:300\n    },\n      \n  })\n);\n\nexport default useStyles","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n    Drawer,     AppBar,         Button,\n    Toolbar,    CssBaseline,    Link,\n    Typography, TextField,      ExpansionPanel,\n    Divider,    IconButton,     InputBase,\n    Fab,        Snackbar,       Popover,\n} from '@material-ui/core'\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport JWT from 'jwt-client'\n\n\nimport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\n    isVerified, sendVerificationEmail, verifyUser, addContact,\n    getAllContacts, searchContacts, getContactById, updateContactById,\n    deleteContactById } from './auth'\nimport useStyles from './drawerStyle'\n\n\nexport default function PersistentDrawerRight() {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const [hasAccount, setHasAccount] = React.useState(true)\n  const [isLogedIn, setIsLogedIn] = React.useState(false)\n  const [editable, setEditable] = React.useState(true)\n  const [isVerified, setVerification] = React.useState(false)\n  const [Error, setError] = React.useState({})\n  const [contacts, setContacts] = React.useState([])\n  const [render, setRender] = React.useState(true)\n  const [lastSearch, setLastSearch] = React.useState('')\n  const [User, setUser] = React.useState({})\n  const [saveUser, setSaveUser] = React.useState(true)\n  \n\n  if (JWT.validate(JWT.get()) && !isLogedIn){\n    getUserInfo()\n      .then(res => {\n        setUser(res)\n        setIsLogedIn(true)\n      }).catch()\n  }\n  var password =''\n  var username =''\n  var email = ''\n  var search = ''\n  var emailCode = ''\n\n\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n    setVerification()\n  }\n\n\n  function handleSubmit() {\n    setError({})\n    if (isLogedIn) { // Logout\n        setIsLogedIn(false)\n        JWT.forget();\n    } else if (hasAccount){ // Login\n\n      Login(username,password)\n      .then(res => {\n        if (!Object.keys(res.Error).length) {\n          console.log('logging in')\n          getUserInfo()\n          .then(res => {\n            setUser(res)\n          }).catch()\n          setIsLogedIn(true);\n        } else {\n          setError(res.Error)\n        }\n      })\n      .catch(err => {\n        setError({password: 'Incorrect Password'})\n      })\n    } else { // Register\n      Register(username, email, password)\n      .then(res => {\n        if (!Object.keys(res.Error).length) {\n          console.log('Registered')\n          setHasAccount(true)\n        } else {\n          setError(res.Error)\n        }\n      })\n      .catch()\n    }\n}\n\n  function toggleHasAccount() {\n      setError({})\n      setHasAccount(!hasAccount)\n  }\n\n  function Username(props) {\n    if (!isLogedIn){\n      return <TextField\n          id=\"outlined-Username-input\"\n          label=\"username\"\n          className={classes.textField}\n          type=\"username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={e => {username = e.target.value}}\n          />;\n    } \n    return null;  \n  }\n\n  function Password(props) {\n      if (!isLogedIn){\n        return <TextField\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => {password = e.target.value}}\n        //value={password}\n      />\n      } \n      return null;  \n  }\n\n  function Email(props) {\n    if (!isLogedIn && !hasAccount){\n      return <TextField\n          id=\"outlined-email-input\"\n          label=\"email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={e => {email = e.target.value}}\n          />;\n    } \n    return null;  \n}\n\n  function ErrorLink (props) {\n    if (props.name === 'username' && Error.username) \n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.username} \n            </Link>\n    if (props.name === 'email' && Error.email) \n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.email||1} \n            </Link> \n    if (props.name === 'password' && Error.password)\n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.password} \n            </Link>\n    return null\n  }\n\n    function SearchBar (props) {\n      if(isLogedIn && hasAccount)\n      {\n        return (\n          <div className={classes.search}>\n            <InputBase\n              placeholder=\"Search\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label' : 'search' }}\n              onChange={e => {search = e.target.value}}\n            />\n          </div> \n        )\n      }\n      return null\n    }\n  \n    function SearchButton () {\n      if(isLogedIn && hasAccount) {\n        return (\n          <IconButton size=\"small\" \n            className={classes.searchButton}\n            aria-label=\"search\"\n            onClick={handleSearch}>\n                    <SearchIcon />\n                  </IconButton>\n        )\n      } else return null\n    }\n\n  function handleSearch() {\n    setLastSearch(search)\n    searchContacts(search)\n    .then(res => {\n      setContacts(res)\n    })\n    \n  }\n\n  function ContactPanel (props) {\n    if (render) console.log(render)\n    if(isLogedIn && hasAccount)\n    {\n      var con = contacts || []\n      return (\n        con.map((item,index) =>\n          <div className={classes.expansionWidith} key={item._id}>\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.expansionHeading}>\n                  {item.firstName} {item.lastName} \n                </Typography>\n                <div className={classes.grow} />\n              </ExpansionPanelSummary>\n              <Divider />\n\n              <ExpansionPanelDetails>\n                <Typography className={classes.grow}>\n                  Email: {item.email} <br></br>\n                  Phone: {item.phone}\n                </Typography>\n                <EditContact contact={item}/>\n                <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"delete\">\n                  <DeleteIcon onClick={e => handleDeleteContact(item._id, index)}/>\n                </IconButton>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </div>\n        )\n      )\n    }\n    return null\n  }\n\n  function handleDeleteContact (_id,index){\n    deleteContactById(_id)\n    .then(res => {\n      searchContacts(lastSearch)\n      .then(res => {\n        setContacts(res)\n      }).catch()\n    setRender(!render)\n  }).catch()  \n  }\n\n  \n\n  function AddNewContact () {\n    if (isLogedIn && hasAccount)\n    {\n      return (<Popover \n          anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        The content of the Popover.\n      </Popover>)\n    }\n    return null\n  }\n\n  function NewContactButton (props) {\n    if (isLogedIn && hasAccount)\n    {\n      return (\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      )\n    }\n    return null\n  }\n\n  function AddContactPopup() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    var firstName = ''\n    var lastName = ''\n    var email = ''\n    var phone = ''\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleAddContact = () => {\n      var Error\n      var contact = {firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phone: phone}\n        if (!firstName || !lastName){\n          Error = 'Please enter name'\n        } else if (!phone) {\n          Error = 'Please enter a phone number'\n        } else {\n          addContact(contact)\n          .then(handleClose).catch()\n        }\n    }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    if (isLogedIn) {\n    return (\n      <div>\n        <Fab color=\"primary\"  aria-label=\"add\" className={classes.fab} onClick={handleClick}>\n          <AddIcon />\n        </Fab>\n        {/* <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n          Open Popover\n        </Button> */}\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <div className={classes.div1}>\n            <Typography variant=\"h6\" className={classes.typography}>Add New Contact</Typography>\n            <TextField \n              label=\"First name\"\n              type=\"text\"\n              margin=\"normal\"\n              onChange={e => {firstName = e.target.value}}\n              />\n            <TextField\n            label=\"Last name\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {lastName = e.target.value}}\n            />\n            <TextField\n            label=\"Phone number\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {phone = e.target.value}}\n            />\n            <TextField\n            label=\"Email\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {email = e.target.value}}\n            />\n            <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleAddContact}\n          >\n            ADD\n          </Button>\n          </div>\n          \n        </Popover>\n      </div>\n    )\n    } else {\n      return null\n    }\n  }\n\n  var EditContact = (props) => {\n    var contact = props.contact\n    \n    const [values, setValues] = React.useState({\n        firstName: contact.firstName,\n        lastName: contact.lastName,\n        email: contact.email,\n        phone: contact.phone,\n      });\n    \n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [name]: event.target.value });\n      };\n\n    \n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleEditContact = () => {\n      var Error\n      var contact = {firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  phone: values.phone}\n          console.log(contact)\n          updateContactById(props.contact._id, contact )\n          .then(res => {\n            handleClose()\n            searchContacts(lastSearch)\n              .then(res => {\n                setContacts(res)\n              }).catch()\n            setRender(!render)\n          }).catch()\n    }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n      <div>\n        <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"edit\">\n                  <EditIcon onClick={handleClick}/>\n         </IconButton>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <div className={classes.div1}>\n            <Typography variant=\"h6\" className={classes.typography}>Edit Contact</Typography>\n            <TextField \n              label=\"First name\"\n              type=\"text\"\n              margin=\"normal\"\n              value={values.firstName}\n              onChange={handleChange('firstName')}\n              />\n            <TextField\n            label=\"Last name\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.lastName}\n            onChange={handleChange('lastName')}\n            />\n            <TextField\n            label=\"Phone number\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.phone}\n              onChange={handleChange('phone')}\n            />\n            <TextField\n            label=\"Email\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.email}\n            onChange={handleChange('email')}\n            />\n            <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={handleEditContact}\n            >\n            Commit\n          </Button>\n          </div>  \n        </Popover>\n      </div>\n    )\n  }\n\n  var EditUser = (props) => {\n    var user = User\n    \n    const [values, setValues] = React.useState({\n        username: user.username,\n        email: user.email,\n      });\n    \n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [name]: event.target.value });\n      };\n\n    \n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleEditUser = () => {\n      var Error\n      var user = {username: values.username,\n                  email: values.email}\n          console.log(user)\n          updateUserInfo(user)\n          .then(res => {\n            getUserInfo()\n              .then(res => {\n                setUser(res)\n                setIsLogedIn(true)\n              }).catch()\n            //if (!Object.keys(res.Error).length) {\n              handleClose()\n            //} else Error = res.Error\n          }).catch()\n    }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n      <div>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(handleClick)}>\n          <EditIcon />\n        </Fab>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <div className={classes.div1}>\n            <Typography variant=\"h6\" className={classes.typography}>Edit User Info</Typography>\n            <TextField \n              label=\"Username\"\n              type=\"text\"\n              margin=\"normal\"\n              value={values.username}\n              onChange={handleChange('username')}\n              />\n            <TextField\n            label=\"Email\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.email}\n            onChange={handleChange('email')}\n            />\n            <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={handleEditUser}\n            >\n            Commit\n          </Button>\n          </div>  \n        </Popover>\n      </div>\n    )\n  }\n\n  // TODO Get proper object for mapping\n  function Options (props) {\n    \n    const [UserValues, setUserValues] = React.useState({\n      username: User.username,\n      email: User.email,\n    });\n  \n    const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setUserValues({ ...UserValues, [name.name]: event.target.value });\n    };\n\n\n    if (isLogedIn && hasAccount)\n    {\n      var usr = {label: \"Username\",name: 'username', val: User.username} \n      var email = {label: \"Email\",name: 'email', val: User.email}\n      var lists = [usr, email]\n      var bool = editable\n      return (\n        lists.map((item) =>\n        <TextField\n          id=\"standard-read-only-input\"\n          label={item.label}\n          defaultValue={item.val}\n          className={classes.textField}\n          margin=\"normal\"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        )\n      )\n    }\n    return null\n  }\n\n  function VerifiedEmail (props) {\n    if (isLogedIn && hasAccount)\n    {\n      var isVerifiedStr = User.isVerified\n      if (isVerified)\n        isVerifiedStr = \"True\"\n      return (\n        <TextField\n          id=\"standard-read-only-input\"\n          label=\"Verified Email\"\n          defaultValue={isVerifiedStr}\n          className={classes.textField}\n          margin=\"normal\"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n      )\n    }\n    return null\n  }\n\n  function HandleEdit (props) {\n    setEditable(!editable)\n  }\n\n  function HandleSave () {\n    setSaveUser(true)\n    setEditable(!editable)\n  }\n  function EditOrUndo (){\n    if (editable) {\n      return <EditIcon />\n    } else {\n      return <UndoIcon />\n    }\n  }\n\n  function SaveEdit () {\n    if (!editable) {\n      return (\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\n          Save\n        </Fab>\n      )\n    } else return null\n  }\n\n  function EditOptions (props) {\n    if(isLogedIn && hasAccount)\n    { \n      if (editable){\n        return (\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\n          <EditOrUndo />\n        </Fab>\n      )} else {\n        return (\n          <div>\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\n              <EditOrUndo />\n            </Fab>\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleSave)}>\n          Save\n        </Fab>\n        </div>\n          \n        )\n      }\n    }\n    return null\n  }\n\n  function VerifyEmailLink (props) {\n    if(isLogedIn && hasAccount && !isVerified)\n    {\n      return (\n        <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={(sendVerificationEmail())}\n          >\n            Click here to verify your email\n          </Link>\n      )\n    }\n    return null\n  }\n\n  // TODO accept verification code to update user's verification\n  function VerifyEmailBanner (props) {\n    if(!isVerified && isLogedIn && hasAccount)\n    {\n      return (\n        <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Enter your email verification code</span>}\n        action={[\n          <div>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Email Verify Code\"\n            className={classes.emailTextField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={e => {emailCode = e.target.value; console.log(emailCode)}}\n            InputProps={{\n              className: classes.emailCodeInput\n            }}\n          />\n          <Button vartiant=\"contained\" className={classes.button} onClick={handleVerifyClick}>\n            Verify\n          </Button>\n          </div>\n        ]}\n      />\n      )\n    }\n    return null\n  }\n\n  function handleVerifyClick () {\n    var check = (verifyUser(emailCode))\n    setVerification(check)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            COP 4331 Contact Manager\n          </Typography>\n          < SearchBar />\n          <SearchButton />\n          <div className={classes.grow} />\n          <AddContactPopup />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <ContactPanel />\n        <VerifyEmailBanner />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n        {(isLogedIn) ? 'Welcome':(hasAccount) ? 'Please Login' : 'Please Create an Account'}\n        </Typography>\n        <div className={classes.grow} />\n        {/* <EditOptions /> */}\n        <EditUser />\n        </div>\n        <Divider />\n        <Username />\n        <ErrorLink name='username'/>\n        <Email />\n        <ErrorLink name='email'/>\n        <Password />\n        <ErrorLink name='password'/>\n        < Options />\n        <VerifiedEmail />\n        <VerifyEmailLink />\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          className={classes.button}\n          onClick={(handleSubmit)}\n          >\n          {(isLogedIn) ? 'Logout': (hasAccount) ? 'Login' : 'Register'}\n        </Button>\n        <Divider />\n        <Link\n          component=\"button\"\n          variant=\"body2\"\n          onClick={((isLogedIn) ? null:toggleHasAccount)}\n        >\n        {(isLogedIn) ? '':(hasAccount) ? 'Dont have an account? Register' : 'Already have an account? Login'} \n        </Link>\n        \n      </Drawer>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Pieces from './components/Pieces'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Pieces} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\n//import Clock from './components/clock'\n//import Login from './components/Login'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}