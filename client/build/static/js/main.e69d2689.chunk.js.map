{"version":3,"sources":["components/auth/index.js","components/drawerStyle.js","components/Pieces.js","App.js","index.js"],"names":["token","JWT","get","axios","defaults","headers","common","Login","username","password","a","Res","Error","then","res","data","exists","user","post","validate","keep","forget","catch","err","console","log","error","searchContacts","usernameFree","Register","email","isEmail","getUserInfo","updateUserInfo","undefined","put","sendVerificationEmail","verifyUser","code","n","addContact","contact","search","updateContactById","id","body","deleteContactById","delete","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","textField","marginLeft","button","margin","content","contentShift","position","borderRadius","shape","backgroundColor","fade","palette","white","breakpoints","up","grow","searchIcon","height","pointerEvents","inputInput","expansionWidith","expansionHeading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fab","extendedIcon","contactDeleteButton","emailTextField","emailCodeInput","color","div1","PersistentDrawerRight","classes","React","useState","open","setOpen","hasAccount","setHasAccount","isLogedIn","setIsLogedIn","isVerified","setVerification","setError","contacts","setContacts","render","setRender","lastSearch","setLastSearch","User","setUser","emailCode","toggleHasAccount","ErrorLink","props","name","Link","component","variant","onClick","handleSearch","EditContact","firstName","lastName","phone","values","setValues","handleChange","event","target","value","anchorEl","setAnchorEl","handleClose","Boolean","IconButton","size","className","aria-label","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","TextField","label","type","onChange","Button","_id","handleVerifyClick","check","CssBaseline","AppBar","clsx","Toolbar","noWrap","InputBase","placeholder","inputRoot","input","inputProps","e","searchButton","Fab","edge","map","item","index","key","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","ExpansionPanelDetails","Snackbar","ContentProps","message","action","InputProps","vartiant","Drawer","anchor","paper","autoComplete","usr","val","defaultValue","readOnly","isVerifiedStr","Object","keys","length","App","exact","path","Pieces","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e69d2689.chunk.js","sourcesContent":["import {isEmail} from 'validator'\r\nimport axios from 'axios'\r\nimport JWT from 'jwt-client'\r\n\r\nvar token = JWT.get()\r\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n\r\nvar Login = async(username,password) => {\r\n    var Res = {Error: {}}\r\n    if (!username) {\r\n        Res.Error.username = 'Please enter your username'\r\n    } else {\r\n        await axios.get(`user/username/${username}`)\r\n        .then(async res => {\r\n            if (!res.data.exists) {\r\n                Res.Error.username = 'Username does not exist'\r\n            } else if (!password) {\r\n                Res.Error.password = 'Please enter your password'\r\n            } else {\r\n                // login\r\n                var user = {username: username, password: password}\r\n                await axios.post('user/login', user)\r\n                .then(res => {\r\n                    if (res.data.token) if (JWT.validate(res.data.token)) {\r\n                        JWT.keep(res.data.token);\r\n                      } else {\r\n                        JWT.forget();\r\n                      };\r\n                })\r\n                .catch(err => {\r\n                    Res.Error.password = 'Incorect Password'\r\n                    return Res\r\n                })\r\n            }\r\n            return Res\r\n            })\r\n        .catch(err => {\r\n            console.log(';(')\r\n            console.error(err)\r\n        })\r\n    } \r\n    searchContacts()\r\n    return Res\r\n}\r\n\r\nvar usernameFree = async (username) => {\r\n    var Res \r\n    await axios.get(`user/username/${username}`)\r\n        .then(res => {\r\n            if (res.data.exists) {\r\n                Res = res.data.exists\r\n            } else Res = false\r\n        })\r\n        .catch(err => console.log)\r\n    return Res\r\n}\r\n\r\nvar Register = async(username, email, password) => {\r\n    var Res = {Error: {}}\r\n    if (!username) {\r\n        Res.Error.username = 'Please enter your username'\r\n    } else {\r\n        await axios.get(`user/username/${username}`)\r\n        .then(async res => {\r\n            if (res.data.exists) {\r\n                Res.Error.username = 'Username is taken'\r\n            } else if (!email || !isEmail(email)) {\r\n                Res.Error.email = 'Please enter a valid email'\r\n            } else if (!password) {\r\n                Res.Error.password = 'Please enter a password'\r\n            } else {\r\n                // register\r\n                var user = {username: username, email: email, password: password}\r\n                await axios.post('user/register', user)\r\n                .then(res => {\r\n                    console.log('succcess')\r\n                })\r\n                .catch(err => {\r\n                    Res.Error.password = 'Incorect Password'\r\n                    return Res\r\n                })\r\n            }\r\n            return Res\r\n            })\r\n        .catch(err => {\r\n            console.log(';(')\r\n            console.error(err)\r\n        })\r\n    } \r\n    return Res\r\n}\r\n\r\n\r\n\r\nvar getUserInfo = async() => {\r\n    var Res\r\n    await axios.get('/user')\r\n        .then( res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n\r\nvar updateUserInfo = async (user) => {\r\n    var Res ={Error: {}}\r\n    if (user.username)\r\n        await usernameFree(user.username)\r\n            .then(async res => {\r\n                if (res) {\r\n                    Res.Error = 'Username already taken'\r\n                    user.username = undefined\r\n                    await axios.put('/user', user)\r\n                        .then( res => {\r\n                            console.log(res.data)\r\n                            Res.data = res.data\r\n                        })\r\n                        .catch()\r\n                } else {\r\n                    await axios.put('/user', user)\r\n                        .then( res => {\r\n                            console.log(res.data)\r\n                            Res.data = res.data\r\n                        })\r\n                        .catch()\r\n                }\r\n            }).catch()    \r\n    return Res\r\n}\r\n\r\nvar deleteUser = async () => {\r\n    var Res\r\n    await axios.delete('/user')\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n// returns true if user is verified\r\nvar isVerified = async (user) => {\r\n    var Res\r\n    await axios.get('/user/isverified', user)\r\n        .then( res => {\r\n            console.log(res.data.isVerified)\r\n            if (res.data.isVerified)\r\n                return res.data.isVerified\r\n            Res = false\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n\r\nvar sendVerificationEmail = async () => {\r\n    var Res\r\n    await axios.get('/user/verify')\r\n        .then( res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch()\r\n}\r\n\r\n// returns true if correct code\r\nvar verifyUser = async (code) => {\r\n    var Res\r\n    await axios.put('/user/verify',{code: code})\r\n        .then( res => {\r\n            console.log(!!res.data.n)\r\n            Res = !!res.data.n\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n\r\n\r\n\r\nvar addContact = async (contact) => {\r\n    var Res\r\n    await axios.post('/contacts', contact)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n\r\nvar getAllContacts = async () => {\r\n    var Res\r\n    await axios.get('/contacts')\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch()\r\n    return Res\r\n}\r\n\r\nvar searchContacts = async (search) => {\r\n    var Res\r\n    await axios.post('/contacts/search', {search: search})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch(err => console.log)\r\n        return Res\r\n}\r\n\r\nvar getContactById = async (id) => {\r\n    var Res\r\n    await axios.get(`/contacts/id/${id}`,)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch(err => console.log)\r\n    return Res\r\n}\r\n\r\nvar updateContactById = async (id, body) => {\r\n    var Res\r\n    await axios.put(`/contacts/id/${id}`, body)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch(err => console.log)\r\n    return Res\r\n}\r\n\r\nvar deleteContactById = async (id) => {\r\n    var Res\r\n    await axios.delete(`/contacts/id/${id}`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            Res = res.data\r\n        })\r\n        .catch(err => console.log)\r\n    return Res\r\n}\r\n\r\nexport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\r\n    isVerified, sendVerificationEmail, verifyUser, addContact,\r\n    getAllContacts, searchContacts, getContactById, updateContactById,\r\n    deleteContactById }","import {\r\n    fade,\r\n    makeStyles,\r\n    Theme,\r\n    createStyles\r\n  } from \"@material-ui/core/styles\";\r\n  // import { amber, green } from '@material-ui/core/colors';\r\n\r\n  \r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      marginRight: drawerWidth\r\n    },\r\n    title: {\r\n      flexGrow: 0\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-start\"\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1)\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      marginRight: -drawerWidth\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      }),\r\n      marginRight: 0\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      }\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 1),\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: 200\r\n      }\r\n    },\r\n    expansionWidith: {\r\n      width: \"100%\"\r\n    },\r\n    expansionHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular\r\n    },\r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    contactDeleteButton: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    emailTextField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    emailCodeInput: {\r\n      color: \"white\"\r\n    },\r\n    div1: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      width:300\r\n    },\r\n      \r\n  })\r\n);\r\n\r\nexport default useStyles","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n    Drawer,     AppBar,         Button,\r\n    Toolbar,    CssBaseline,    Link,\r\n    Typography, TextField,      ExpansionPanel,\r\n    Divider,    IconButton,     InputBase,\r\n    Fab,        Snackbar,       Popover,\r\n} from '@material-ui/core'\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport JWT from 'jwt-client'\r\n\r\n\r\nimport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\r\n    isVerified, sendVerificationEmail, verifyUser, addContact,\r\n    getAllContacts, searchContacts, getContactById, updateContactById,\r\n    deleteContactById } from './auth'\r\nimport useStyles from './drawerStyle'\r\n\r\n\r\nexport default function PersistentDrawerRight() {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const [hasAccount, setHasAccount] = React.useState(true)\r\n  const [isLogedIn, setIsLogedIn] = React.useState(false)\r\n  const [editable, setEditable] = React.useState(true)\r\n  const [isVerified, setVerification] = React.useState(false)\r\n  const [Error, setError] = React.useState({})\r\n  const [contacts, setContacts] = React.useState([])\r\n  const [render, setRender] = React.useState(true)\r\n  const [lastSearch, setLastSearch] = React.useState('')\r\n  const [User, setUser] = React.useState({})\r\n  const [saveUser, setSaveUser] = React.useState(true)\r\n  \r\n\r\n  if (JWT.validate(JWT.get()) && !isLogedIn){\r\n    getUserInfo()\r\n      .then(res => {\r\n        setUser(res)\r\n        setIsLogedIn(true)\r\n      }).catch()\r\n  }\r\n  var password =''\r\n  var username =''\r\n  var email = ''\r\n  var search = ''\r\n  var emailCode = ''\r\n\r\n\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n    setVerification()\r\n  }\r\n\r\n\r\n  function handleSubmit() {\r\n    setError({})\r\n    if (isLogedIn) { // Logout\r\n        setIsLogedIn(false)\r\n        JWT.forget();\r\n    } else if (hasAccount){ // Login\r\n\r\n      Login(username,password)\r\n      .then(res => {\r\n        if (!Object.keys(res.Error).length) {\r\n          console.log('logging in')\r\n          getUserInfo()\r\n          .then(res => {\r\n            setUser(res)\r\n          }).catch()\r\n          setIsLogedIn(true);\r\n        } else {\r\n          setError(res.Error)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError({password: 'Incorrect Password'})\r\n      })\r\n    } else { // Register\r\n      Register(username, email, password)\r\n      .then(res => {\r\n        if (!Object.keys(res.Error).length) {\r\n          console.log('Registered')\r\n          setHasAccount(true)\r\n        } else {\r\n          setError(res.Error)\r\n        }\r\n      })\r\n      .catch()\r\n    }\r\n}\r\n\r\n  function toggleHasAccount() {\r\n      setError({})\r\n      setHasAccount(!hasAccount)\r\n  }\r\n\r\n  function Username(props) {\r\n    if (!isLogedIn){\r\n      return <TextField\r\n          id=\"outlined-Username-input\"\r\n          label=\"username\"\r\n          className={classes.textField}\r\n          type=\"username\"\r\n          name=\"username\"\r\n          autoComplete=\"username\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          onChange={e => {username = e.target.value}}\r\n          />;\r\n    } \r\n    return null;  \r\n  }\r\n\r\n  function Password(props) {\r\n      if (!isLogedIn){\r\n        return <TextField\r\n        id=\"outlined-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={e => {password = e.target.value}}\r\n        //value={password}\r\n      />\r\n      } \r\n      return null;  \r\n  }\r\n\r\n  function Email(props) {\r\n    if (!isLogedIn && !hasAccount){\r\n      return <TextField\r\n          id=\"outlined-email-input\"\r\n          label=\"email\"\r\n          className={classes.textField}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          onChange={e => {email = e.target.value}}\r\n          />;\r\n    } \r\n    return null;  \r\n}\r\n\r\n  function ErrorLink (props) {\r\n    if (props.name === 'username' && Error.username) \r\n      return <Link component=\"button\" color=\"error\"\r\n              variant=\"body2\"\r\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\r\n            >\r\n            {Error.username} \r\n            </Link>\r\n    if (props.name === 'email' && Error.email) \r\n      return <Link component=\"button\" color=\"error\"\r\n              variant=\"body2\"\r\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\r\n            >\r\n            {Error.email||1} \r\n            </Link> \r\n    if (props.name === 'password' && Error.password)\r\n      return <Link component=\"button\" color=\"error\"\r\n              variant=\"body2\"\r\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\r\n            >\r\n            {Error.password} \r\n            </Link>\r\n    return null\r\n  }\r\n\r\n    function SearchBar (props) {\r\n      if(isLogedIn && hasAccount)\r\n      {\r\n        return (\r\n          <div className={classes.search}>\r\n            <InputBase\r\n              placeholder=\"Search\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ 'aria-label' : 'search' }}\r\n              onChange={e => {search = e.target.value}}\r\n            />\r\n          </div> \r\n        )\r\n      }\r\n      return null\r\n    }\r\n  \r\n    function SearchButton () {\r\n      if(isLogedIn && hasAccount) {\r\n        return (\r\n          <IconButton size=\"small\" \r\n            className={classes.searchButton}\r\n            aria-label=\"search\"\r\n            onClick={handleSearch}>\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n        )\r\n      } else return null\r\n    }\r\n\r\n  function handleSearch() {\r\n    setLastSearch(search)\r\n    searchContacts(search)\r\n    .then(res => {\r\n      setContacts(res)\r\n    })\r\n    \r\n  }\r\n\r\n  function ContactPanel (props) {\r\n    if (render) console.log(render)\r\n    if(isLogedIn && hasAccount)\r\n    {\r\n      var con = contacts || []\r\n      return (\r\n        con.map((item,index) =>\r\n          <div className={classes.expansionWidith} key={item._id}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.expansionHeading}>\r\n                  {item.firstName} {item.lastName} \r\n                </Typography>\r\n                <div className={classes.grow} />\r\n              </ExpansionPanelSummary>\r\n              <Divider />\r\n\r\n              <ExpansionPanelDetails>\r\n                <Typography className={classes.grow}>\r\n                  Email: {item.email} <br></br>\r\n                  Phone: {item.phone}\r\n                </Typography>\r\n                <EditContact contact={item}/>\r\n                <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"delete\">\r\n                  <DeleteIcon onClick={e => handleDeleteContact(item._id, index)}/>\r\n                </IconButton>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </div>\r\n        )\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  function handleDeleteContact (_id,index){\r\n    deleteContactById(_id)\r\n    .then(res => {\r\n      searchContacts(lastSearch)\r\n      .then(res => {\r\n        setContacts(res)\r\n      }).catch()\r\n    setRender(!render)\r\n  }).catch()  \r\n  }\r\n\r\n  \r\n\r\n  function AddNewContact () {\r\n    if (isLogedIn && hasAccount)\r\n    {\r\n      return (<Popover \r\n          anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        The content of the Popover.\r\n      </Popover>)\r\n    }\r\n    return null\r\n  }\r\n\r\n  function NewContactButton (props) {\r\n    if (isLogedIn && hasAccount)\r\n    {\r\n      return (\r\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <AddIcon />\r\n        </Fab>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  function AddContactPopup() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    var firstName = ''\r\n    var lastName = ''\r\n    var email = ''\r\n    var phone = ''\r\n  \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log(anchorEl)\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleAddContact = () => {\r\n      var Error\r\n      var contact = {firstName: firstName,\r\n                  lastName: lastName,\r\n                  email: email,\r\n                  phone: phone}\r\n        if (!firstName || !lastName){\r\n          Error = 'Please enter name'\r\n        } else if (!phone) {\r\n          Error = 'Please enter a phone number'\r\n        } else {\r\n          addContact(contact)\r\n          .then(handleClose).catch()\r\n        }\r\n    }\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    if (isLogedIn) {\r\n    return (\r\n      <div>\r\n        <Fab color=\"primary\"  aria-label=\"add\" className={classes.fab} onClick={handleClick}>\r\n          <AddIcon />\r\n        </Fab>\r\n        {/* <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n          Open Popover\r\n        </Button> */}\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <div className={classes.div1}>\r\n            <Typography variant=\"h6\" className={classes.typography}>Add New Contact</Typography>\r\n            <TextField \r\n              label=\"First name\"\r\n              type=\"text\"\r\n              margin=\"normal\"\r\n              onChange={e => {firstName = e.target.value}}\r\n              />\r\n            <TextField\r\n            label=\"Last name\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={e => {lastName = e.target.value}}\r\n            />\r\n            <TextField\r\n            label=\"Phone number\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={e => {phone = e.target.value}}\r\n            />\r\n            <TextField\r\n            label=\"Email\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            onChange={e => {email = e.target.value}}\r\n            />\r\n            <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={handleAddContact}\r\n          >\r\n            ADD\r\n          </Button>\r\n          </div>\r\n          \r\n        </Popover>\r\n      </div>\r\n    )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  var EditContact = (props) => {\r\n    var contact = props.contact\r\n    \r\n    const [values, setValues] = React.useState({\r\n        firstName: contact.firstName,\r\n        lastName: contact.lastName,\r\n        email: contact.email,\r\n        phone: contact.phone,\r\n      });\r\n    \r\n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n      };\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log(anchorEl)\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleEditContact = () => {\r\n      var Error\r\n      var contact = {firstName: values.firstName,\r\n                  lastName: values.lastName,\r\n                  email: values.email,\r\n                  phone: values.phone}\r\n          console.log(contact)\r\n          updateContactById(props.contact._id, contact )\r\n          .then(res => {\r\n            handleClose()\r\n            searchContacts(lastSearch)\r\n              .then(res => {\r\n                setContacts(res)\r\n              }).catch()\r\n            setRender(!render)\r\n          }).catch()\r\n    }\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n      <div>\r\n        <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"edit\">\r\n                  <EditIcon onClick={handleClick}/>\r\n         </IconButton>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <div className={classes.div1}>\r\n            <Typography variant=\"h6\" className={classes.typography}>Edit Contact</Typography>\r\n            <TextField \r\n              label=\"First name\"\r\n              type=\"text\"\r\n              margin=\"normal\"\r\n              value={values.firstName}\r\n              onChange={handleChange('firstName')}\r\n              />\r\n            <TextField\r\n            label=\"Last name\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            value={values.lastName}\r\n            onChange={handleChange('lastName')}\r\n            />\r\n            <TextField\r\n            label=\"Phone number\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            value={values.phone}\r\n              onChange={handleChange('phone')}\r\n            />\r\n            <TextField\r\n            label=\"Email\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            value={values.email}\r\n            onChange={handleChange('email')}\r\n            />\r\n            <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleEditContact}\r\n            >\r\n            Commit\r\n          </Button>\r\n          </div>  \r\n        </Popover>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  var EditUser = (props) => {\r\n    var user = User\r\n    \r\n      const [values, setValues] = React.useState({\r\n        username: user.username,\r\n        email: user.email,\r\n      });\r\n    \r\n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n      };\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log(anchorEl)\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleEditUser = () => {\r\n      var Error\r\n      var user = {username: values.username,\r\n                  email: values.email}\r\n          console.log(user)\r\n          updateUserInfo(user)\r\n          .then(res => {\r\n            getUserInfo()\r\n              .then(res => {\r\n                setUser(res)\r\n                setIsLogedIn(true)\r\n              }).catch()\r\n            //if (!Object.keys(res.Error).length) {\r\n              handleClose()\r\n            //} else Error = res.Error\r\n          }).catch()\r\n    }\r\n    \r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    if (isLogedIn && hasAccount)\r\n    {\r\n    return (\r\n      <div>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(handleClick)}>\r\n          <EditIcon />\r\n        </Fab>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <div className={classes.div1}>\r\n            <Typography variant=\"h6\" className={classes.typography}>Edit User Info</Typography>\r\n            <TextField \r\n              label=\"Username\"\r\n              type=\"text\"\r\n              margin=\"normal\"\r\n              value={values.username}\r\n              onChange={handleChange('username')}\r\n              />\r\n            <TextField\r\n            label=\"Email\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            value={values.email}\r\n            onChange={handleChange('email')}\r\n            />\r\n            <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleEditUser}\r\n            >\r\n            Commit\r\n          </Button>\r\n          </div>  \r\n        </Popover>\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n  }\r\n\r\n  // TODO Get proper object for mapping\r\n  function Options (props) {\r\n    \r\n    const [UserValues, setUserValues] = React.useState({\r\n      username: User.username,\r\n      email: User.email,\r\n    });\r\n  \r\n    const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setUserValues({ ...UserValues, [name.name]: event.target.value });\r\n    };\r\n\r\n\r\n    if (isLogedIn && hasAccount)\r\n    {\r\n      var usr = {label: \"Username\",name: 'username', val: User.username} \r\n      var email = {label: \"Email\",name: 'email', val: User.email}\r\n      var lists = [usr, email]\r\n      var bool = editable\r\n      return (\r\n        lists.map((item) =>\r\n        <TextField\r\n          id=\"standard-read-only-input\"\r\n          label={item.label}\r\n          defaultValue={item.val}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        )\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  function VerifiedEmail (props) {\r\n    if (isLogedIn && hasAccount)\r\n    {\r\n      var isVerifiedStr = User.isVerified\r\n      if (isVerified)\r\n        isVerifiedStr = \"True\"\r\n      return (\r\n        <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Verified Email\"\r\n          defaultValue={isVerifiedStr}\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  function HandleEdit (props) {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  function HandleSave () {\r\n    setSaveUser(true)\r\n    setEditable(!editable)\r\n  }\r\n  function EditOrUndo (){\r\n    if (editable) {\r\n      return <EditIcon />\r\n    } else {\r\n      return <UndoIcon />\r\n    }\r\n  }\r\n\r\n  function SaveEdit () {\r\n    if (!editable) {\r\n      return (\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\r\n          Save\r\n        </Fab>\r\n      )\r\n    } else return null\r\n  }\r\n\r\n  function EditOptions (props) {\r\n    if(isLogedIn && hasAccount)\r\n    { \r\n      if (editable){\r\n        return (\r\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\r\n          <EditOrUndo />\r\n        </Fab>\r\n      )} else {\r\n        return (\r\n          <div>\r\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleEdit)}>\r\n              <EditOrUndo />\r\n            </Fab>\r\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(HandleSave)}>\r\n          Save\r\n        </Fab>\r\n        </div>\r\n          \r\n        )\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  function VerifyEmailLink (props) {\r\n    if(isLogedIn && hasAccount && !isVerified)\r\n    {\r\n      return (\r\n        <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={(sendVerificationEmail())}\r\n          >\r\n            Click here to verify your email\r\n          </Link>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  // TODO accept verification code to update user's verification\r\n  function VerifyEmailBanner (props) {\r\n    if(!isVerified && isLogedIn && hasAccount)\r\n    {\r\n      return (\r\n        <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Enter your email verification code</span>}\r\n        action={[\r\n          <div>\r\n          <TextField\r\n            id=\"outlined-name\"\r\n            label=\"Email Verify Code\"\r\n            className={classes.emailTextField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            onChange={e => {emailCode = e.target.value; console.log(emailCode)}}\r\n            InputProps={{\r\n              className: classes.emailCodeInput\r\n            }}\r\n          />\r\n          <Button vartiant=\"contained\" className={classes.button} onClick={handleVerifyClick}>\r\n            Verify\r\n          </Button>\r\n          </div>\r\n        ]}\r\n      />\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  function handleVerifyClick () {\r\n    var check = (verifyUser(emailCode))\r\n    setVerification(check)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            COP 4331 Contact Manager\r\n          </Typography>\r\n          < SearchBar />\r\n          <SearchButton />\r\n          <div className={classes.grow} />\r\n          <AddContactPopup />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <ContactPanel />\r\n        <VerifyEmailBanner />\r\n      </main>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant='persistent'\r\n        anchor=\"right\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        <Typography variant=\"h6\" noWrap className={classes.title}>\r\n        {(isLogedIn) ? 'Welcome':(hasAccount) ? 'Please Login' : 'Please Create an Account'}\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <EditOptions /> */}\r\n        <EditUser />\r\n        </div>\r\n        <Divider />\r\n        <Username />\r\n        <ErrorLink name='username'/>\r\n        <Email />\r\n        <ErrorLink name='email'/>\r\n        <Password />\r\n        <ErrorLink name='password'/>\r\n        < Options />\r\n        <VerifiedEmail />\r\n        <VerifyEmailLink />\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          className={classes.button}\r\n          onClick={(handleSubmit)}\r\n          >\r\n          {(isLogedIn) ? 'Logout': (hasAccount) ? 'Login' : 'Register'}\r\n        </Button>\r\n        <Divider />\r\n        <Link\r\n          component=\"button\"\r\n          variant=\"body2\"\r\n          onClick={((isLogedIn) ? null:toggleHasAccount)}\r\n        >\r\n        {(isLogedIn) ? '':(hasAccount) ? 'Dont have an account? Register' : 'Already have an account? Login'} \r\n        </Link>\r\n        \r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Pieces from './components/Pieces'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={Pieces} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\n//import Clock from './components/clock'\r\n//import Login from './components/Login'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}