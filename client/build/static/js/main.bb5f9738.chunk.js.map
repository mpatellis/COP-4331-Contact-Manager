{"version":3,"sources":["components/auth/index.js","components/drawerStyle.js","components/Pieces.js","App.js","index.js"],"names":["token","JWT","get","axios","defaults","headers","common","Login","username","password","a","Res","Error","then","res","data","exists","user","post","validate","keep","forget","catch","err","console","log","error","searchContacts","usernameFree","Register","email","isEmail","getUserInfo","updateUserInfo","undefined","put","sendVerificationEmail","verifyUser","code","n","addContact","contact","search","updateContactById","id","body","deleteContactById","delete","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","textField","marginLeft","button","margin","content","contentShift","position","borderRadius","shape","backgroundColor","fade","palette","white","breakpoints","up","grow","searchIcon","height","pointerEvents","inputInput","expansionWidith","expansionHeading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fab","extendedIcon","contactDeleteButton","emailTextField","emailCodeInput","color","emailBackgound","green","div1","PersistentDrawerRight","classes","React","useState","open","setOpen","hasAccount","setHasAccount","isLogedIn","setIsLogedIn","isVerified","setVerification","setError","contacts","setContacts","render","setRender","lastSearch","setLastSearch","User","setUser","reRender","setReRender","emailCode","toggleHasAccount","ErrorLink","props","name","Link","component","variant","onClick","handleSearch","EditContact","firstName","lastName","phone","values","setValues","handleChange","event","target","value","anchorEl","setAnchorEl","handleClose","Boolean","IconButton","size","className","aria-label","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","TextField","label","type","onChange","Button","_id","handleVerifyClick","CssBaseline","AppBar","clsx","Toolbar","noWrap","InputBase","placeholder","inputRoot","input","inputProps","e","searchButton","Fab","edge","map","item","index","key","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","ExpansionPanelDetails","Snackbar","ContentProps","message","vartiant","InputProps","Drawer","anchor","paper","autoComplete","usr","val","defaultValue","readOnly","isVerifiedStr","Object","keys","length","window","location","reload","App","exact","path","Pieces","Component","ReactDOM","document","getElementById"],"mappings":"qlBAIIA,GAAQC,IAAIC,MAChBC,IAAMC,SAASC,QAAQC,OAAvB,+BAA2DN,IAE3D,IAAIO,GAAK,uCAAG,WAAMC,EAASC,GAAf,eAAAC,EAAA,yDACJC,EAAM,CAACC,MAAO,IACbJ,EAFG,gBAGJG,EAAIC,MAAMJ,SAAW,6BAHjB,sCAKEL,IAAMD,IAAN,wBAA2BM,IAChCK,KADK,+BAAAH,EAAA,MACA,WAAMI,GAAN,eAAAJ,EAAA,yDACGI,EAAIC,KAAKC,OADZ,gBAEEL,EAAIC,MAAMJ,SAAW,0BAFvB,0BAGUC,EAHV,gBAIEE,EAAIC,MAAMH,SAAW,6BAJvB,8BAOMQ,EAAO,CAACT,SAAUA,EAAUC,SAAUA,GAP5C,UAQQN,IAAMe,KAAK,aAAcD,GAC9BJ,MAAK,SAAAC,GACEA,EAAIC,KAAKf,QAAWC,IAAIkB,SAASL,EAAIC,KAAKf,OAC1CC,IAAImB,KAAKN,EAAIC,KAAKf,OAElBC,IAAIoB,aAGXC,OAAM,SAAAC,GAEH,OADAZ,EAAIC,MAAMH,SAAW,oBACdE,KAlBb,iCAqBKA,GArBL,4CADA,uDAwBLW,OAAM,SAAAC,GACHC,QAAQC,IAAI,MACZD,QAAQE,MAAMH,MA/Bd,cAkCRI,KAlCQ,kBAmCDhB,GAnCC,2CAAH,wDAsCLiB,GAAY,uCAAG,WAAOpB,GAAP,eAAAE,EAAA,sEAETP,IAAMD,IAAN,wBAA2BM,IAC5BK,MAAK,SAAAC,GAEEH,IADAG,EAAIC,KAAKC,QACHF,EAAIC,KAAKC,UAGtBM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,OARX,gCASRd,GATQ,2CAAH,sDAYZkB,GAAQ,uCAAG,WAAMrB,EAAUsB,EAAOrB,GAAvB,eAAAC,EAAA,yDACPC,EAAM,CAACC,MAAO,IACbJ,EAFM,gBAGPG,EAAIC,MAAMJ,SAAW,6BAHd,sCAKDL,IAAMD,IAAN,wBAA2BM,IAChCK,KADK,+BAAAH,EAAA,MACA,WAAMI,GAAN,eAAAJ,EAAA,0DACEI,EAAIC,KAAKC,OADX,gBAEEL,EAAIC,MAAMJ,SAAW,oBAFvB,0BAGUsB,GAAUC,kBAAQD,GAH5B,gBAIEnB,EAAIC,MAAMkB,MAAQ,6BAJpB,0BAKUrB,EALV,iBAMEE,EAAIC,MAAMH,SAAW,0BANvB,+BASMQ,EAAO,CAACT,SAAUA,EAAUsB,MAAOA,EAAOrB,SAAUA,GAT1D,UAUQN,IAAMe,KAAK,gBAAiBD,GACjCJ,MAAK,SAAAC,GACFU,QAAQC,IAAI,eAEfH,OAAM,SAAAC,GAEH,OADAZ,EAAIC,MAAMH,SAAW,oBACdE,KAhBb,iCAmBKA,GAnBL,4CADA,uDAsBLW,OAAM,SAAAC,GACHC,QAAQC,IAAI,MACZD,QAAQE,MAAMH,MA7BX,gCAgCJZ,GAhCI,2CAAH,0DAqCRqB,GAAW,uCAAG,4BAAAtB,EAAA,sEAERP,IAAMD,IAAI,SACXW,MAAM,SAAAC,GACHU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAMG,EAAIC,QAEbO,QAPS,gCAQPX,GARO,2CAAH,qDAWXsB,GAAc,uCAAG,WAAOhB,GAAP,eAAAP,EAAA,yDACbC,EAAK,CAACC,MAAO,KACbK,EAAKT,SAFQ,gCAGPoB,GAAaX,EAAKT,UACnBK,KADC,uCACI,WAAMC,GAAN,SAAAJ,EAAA,0DACEI,EADF,uBAEEH,EAAIC,MAAQ,yBACZK,EAAKT,cAAW0B,EAHlB,SAIQ/B,IAAMgC,IAAI,QAASlB,GACpBJ,MAAM,SAAAC,GACHU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAII,KAAOD,EAAIC,QAElBO,QATP,6CAWQnB,IAAMgC,IAAI,QAASlB,GACpBJ,MAAM,SAAAC,GACHU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAII,KAAOD,EAAIC,QAElBO,QAhBP,2CADJ,uDAmBCA,QAtBM,gCAuBVX,GAvBU,2CAAH,sDAkDdyB,GAAqB,uCAAG,sBAAA1B,EAAA,sEAElBP,IAAMD,IAAI,gBACXW,MAAM,SAAAC,GACHU,QAAQC,IAAIX,EAAIC,MACVD,EAAIC,QAEbO,QAPmB,2CAAH,qDAWrBe,GAAU,uCAAG,WAAOC,GAAP,eAAA5B,EAAA,sEAEPP,IAAMgC,IAAI,eAAe,CAACG,KAAMA,IACjCzB,MAAM,SAAAC,GACHU,QAAQC,MAAMX,EAAIC,KAAKwB,GACvB5B,IAAQG,EAAIC,KAAKwB,KAEpBjB,QAPQ,gCAQNX,GARM,2CAAH,sDAaV6B,GAAU,uCAAG,WAAOC,GAAP,eAAA/B,EAAA,sEAEPP,IAAMe,KAAK,YAAauB,GACzB5B,MAAK,SAAAC,GACFU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAMG,EAAIC,QAEbO,QAPQ,gCAQNX,GARM,2CAAH,sDAsBVgB,GAAc,uCAAG,WAAOe,GAAP,eAAAhC,EAAA,sEAEXP,IAAMe,KAAK,mBAAoB,CAACwB,OAAQA,IACzC7B,MAAK,SAAAC,GACFU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAMG,EAAIC,QAEbO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,OAPT,gCAQNd,GARM,2CAAH,sDAsBdgC,GAAiB,uCAAG,WAAOC,EAAIC,GAAX,eAAAnC,EAAA,sEAEdP,IAAMgC,IAAN,uBAA0BS,GAAMC,GACjChC,MAAK,SAAAC,GACFU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAMG,EAAIC,QAEbO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,OAPN,gCAQbd,GARa,2CAAH,wDAWjBmC,GAAiB,uCAAG,WAAOF,GAAP,eAAAlC,EAAA,sEAEdP,IAAM4C,OAAN,uBAA6BH,IAC9B/B,MAAK,SAAAC,GACFU,QAAQC,IAAIX,EAAIC,MAChBJ,EAAMG,EAAIC,QAEbO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,OAPN,gCAQbd,GARa,2CAAH,sD,omBCjOrB,IAoIeqC,GAnIGC,cAAW,SAACC,GAAD,OAC3BC,aAAa,CACXC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAbS,IAaT,OACLR,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQR,EAAMM,YAAYE,OAAOM,QACjCJ,SAAUV,EAAMM,YAAYI,SAASK,iBAEvCC,YAlBc,KAoBhBC,MAAO,CACLC,SAAU,GAEZC,KAAM,CACJhB,QAAS,QAEXiB,OAAQ,CACNP,MA3Bc,IA4BdQ,WAAY,GAEdC,YAAa,CACXT,MA/Bc,KAiChBU,aAAa,GAAD,CACVpB,QAAS,OACTqB,WAAY,SACZC,QAASzB,EAAM0B,QAAQ,EAAG,IACvB1B,EAAM2B,OAAOC,QAJN,CAKVC,eAAgB,eAElBC,UAAW,CACTC,WAAY/B,EAAM0B,QAAQ,GAC1BV,YAAahB,EAAM0B,QAAQ,IAE7BM,OAAQ,CACNC,OAAQjC,EAAM0B,QAAQ,IAExBQ,QAAS,CACPhB,SAAU,EACVO,QAASzB,EAAM0B,QAAQ,GACvBrB,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC7CC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,gBAEvCK,aAtDc,KAwDhBmB,aAAc,CACZ9B,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC7CC,OAAQR,EAAMM,YAAYE,OAAOM,QACjCJ,SAAUV,EAAMM,YAAYI,SAASK,iBAEvCC,YAAa,GAEfxB,OAAO,aACL4C,SAAU,WACVC,aAAcrC,EAAMsC,MAAMD,aAC1BE,gBAAiBC,aAAKxC,EAAMyC,QAAQrF,OAAOsF,MAAO,KAClD,UAAW,CACTH,gBAAiBC,aAAKxC,EAAMyC,QAAQrF,OAAOsF,MAAO,MAEpD1B,YAAahB,EAAM0B,QAAQ,GAC3BK,WAAY,EACZlB,MAAO,QACNb,EAAM2C,YAAYC,GAAG,MAAQ,CAC5Bb,WAAY/B,EAAM0B,QAAQ,GAC1Bb,MAAO,SAGXgC,KAAM,CACJ3B,SAAU,GAEZ4B,WAAY,CACVjC,MAAOb,EAAM0B,QAAQ,GACrBqB,OAAQ,OACRX,SAAU,WACVY,cAAe,OACf7C,QAAS,OACTqB,WAAY,SACZK,eAAgB,UAElBoB,WAAW,aACTxB,QAASzB,EAAM0B,QAAQ,EAAG,EAAG,EAAG,GAChCrB,WAAYL,EAAMM,YAAYC,OAAO,SACrCM,MAAO,QACNb,EAAM2C,YAAYC,GAAG,MAAQ,CAC5B/B,MAAO,MAGXqC,gBAAiB,CACfrC,MAAO,QAETsC,iBAAkB,CAChBC,SAAUpD,EAAMqD,WAAWC,QAAQ,IACnCC,WAAYvD,EAAMqD,WAAWG,mBAE/BC,IAAK,CACHxB,OAAQjC,EAAM0B,QAAQ,IAExBgC,aAAc,CACZ1C,YAAahB,EAAM0B,QAAQ,IAE7BiC,oBAAqB,CACnB1B,OAAQjC,EAAM0B,QAAQ,IAExBkC,eAAgB,CACd7B,WAAY/B,EAAM0B,QAAQ,GAC1BV,YAAahB,EAAM0B,QAAQ,IAE7BmC,eAAgB,CACdC,MAAO,SAETC,eAAgB,CACdxB,gBAAiByB,KAAM,MAEzBC,KAAM,CACJxC,QAASzB,EAAM0B,QAAQ,EAAG,EAAG,EAAG,GAChCb,MAAM,U,okBC1GG,SAASqD,KACtB,IAAMC,EAAUrE,KAD8B,EAGtBsE,IAAMC,UAAS,GAHO,mBAGvCC,EAHuC,KAGjCC,EAHiC,OAIVH,IAAMC,UAAS,GAJL,mBAIvCG,EAJuC,KAI3BC,EAJ2B,OAKZL,IAAMC,UAAS,GALH,mBAKvCK,EALuC,KAK5BC,EAL4B,OAMdP,IAAMC,UAAS,GAND,gCAORD,IAAMC,UAAS,IAPP,mBAOvCO,EAPuC,KAO3BC,EAP2B,OAQpBT,IAAMC,SAAS,IARK,mBAQvC3G,EARuC,KAQhCoH,EARgC,OASdV,IAAMC,SAAS,IATD,mBASvCU,EATuC,KAS7BC,GAT6B,QAUlBZ,IAAMC,UAAS,GAVG,qBAUvCY,GAVuC,MAU/BC,GAV+B,SAWVd,IAAMC,SAAS,IAXL,qBAWvCc,GAXuC,MAW3BC,GAX2B,SAYtBhB,IAAMC,SAAS,IAZO,qBAYvCgB,GAZuC,MAYjCC,GAZiC,SAadlB,IAAMC,UAAS,GAbD,qCAcpBD,IAAMC,UAAS,IAdK,qCAedD,IAAMC,UAAS,IAfD,qBAevCkB,GAfuC,MAe7BC,GAf6B,MAkB1CzI,IAAIkB,SAASlB,IAAIC,SAAW0H,GAC9B5F,KACGnB,MAAK,SAAAC,GACJ0H,GAAQ1H,GACRiH,EAAgBjH,EAAIgH,eACnBjH,KAAKgH,GAAa,IAAOvG,QAEhC,IAAIb,GAAU,GACVD,GAAU,GACVsB,GAAQ,GACRY,GAAS,GACTiG,GAAY,GAsDhB,SAASC,KACLZ,EAAS,IACTL,GAAeD,GAsDnB,SAASmB,GAAWC,GAClB,MAAmB,aAAfA,EAAMC,MAAuBnI,EAAMJ,SAC9B,kBAACwI,EAAA,EAAD,CAAMC,UAAU,SAASjC,MAAM,QAC9BkC,QAAQ,QACRC,QAAWvB,EAAa,KAAKgB,IAE9BhI,EAAMJ,UAEI,UAAfsI,EAAMC,MAAoBnI,EAAMkB,MAC3B,kBAACkH,EAAA,EAAD,CAAMC,UAAU,SAASjC,MAAM,QAC9BkC,QAAQ,QACRC,QAAWvB,EAAa,KAAKgB,IAE9BhI,EAAMkB,OAAO,GAEH,aAAfgH,EAAMC,MAAuBnI,EAAMH,SAC9B,kBAACuI,EAAA,EAAD,CAAMC,UAAU,SAASjC,MAAM,QAC9BkC,QAAQ,QACRC,QAAWvB,EAAa,KAAKgB,IAE9BhI,EAAMH,UAER,KAoCT,SAAS2I,KACPd,GAAc5F,IACdf,GAAee,IACd7B,MAAK,SAAAC,GACJoH,GAAYpH,MA4JhB,IAAIuI,GAAc,SAACP,GACjB,IAAIrG,EAAUqG,EAAMrG,QADO,EAGC6E,IAAMC,SAAS,CACvC+B,UAAW7G,EAAQ6G,UACnBC,SAAU9G,EAAQ8G,SAClBzH,MAAOW,EAAQX,MACf0H,MAAO/G,EAAQ+G,QAPQ,mBAGpBC,EAHoB,KAGZC,EAHY,KAUnBC,EAAe,SAACZ,GAAD,OAAU,SAACa,GAC9BF,EAAU,MAAKD,EAAN,eAAeV,EAAOa,EAAMC,OAAOC,WAI1CzC,EAAUrE,KAfW,EAiBKsE,IAAMC,SAAS,MAjBpB,mBAiBpBwC,EAjBoB,KAiBVC,EAjBU,KAyBrBC,EAAc,WAClBD,EAAY,OAqBRxC,EAAO0C,QAAQH,GACfnH,EAAK4E,EAAO,sBAAmBtF,EAErC,OACE,6BACE,kBAACiI,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWhD,EAAQR,oBAAqByD,aAAW,QAClE,kBAAC,IAAD,CAAUnB,QAjCJ,SAACS,GACnBI,EAAYJ,EAAMW,eAClB/I,QAAQC,IAAIsI,OAiCV,kBAACS,EAAA,EAAD,CACE5H,GAAIA,EACJ4E,KAAMA,EACNuC,SAAUA,EACVU,QAASR,EACTS,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAGd,yBAAKP,UAAWhD,EAAQF,MACtB,kBAAC2D,EAAA,EAAD,CAAY5B,QAAQ,KAAKmB,UAAWhD,EAAQd,YAA5C,gBACA,kBAACwE,EAAA,EAAD,CACEC,MAAM,aACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAOH,UACd4B,SAAUvB,EAAa,eAEzB,kBAACoB,EAAA,EAAD,CACAC,MAAM,YACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAOF,SACd2B,SAAUvB,EAAa,cAEvB,kBAACoB,EAAA,EAAD,CACAC,MAAM,eACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAOD,MACZ0B,SAAUvB,EAAa,WAEzB,kBAACoB,EAAA,EAAD,CACAC,MAAM,QACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAO3H,MACdoJ,SAAUvB,EAAa,WAEvB,kBAACwB,EAAA,EAAD,CACAjC,QAAQ,YACRlC,MAAM,UACNmC,QAzEkB,WACxB,IACI1G,EAAU,CAAC6G,UAAWG,EAAOH,UACrBC,SAAUE,EAAOF,SACjBzH,MAAO2H,EAAO3H,MACd0H,MAAOC,EAAOD,OACtBhI,QAAQC,IAAIgB,GACZE,GAAkBmG,EAAMrG,QAAQ2I,IAAK3I,GACpC5B,MAAK,SAAAC,GACJmJ,IACAtI,GAAe0G,IACZxH,MAAK,SAAAC,GACJoH,GAAYpH,MACXQ,QACL8G,IAAWD,OACV7G,UAuDD,cAqOV,SAAS+J,KACPhJ,GAAWsG,IACV9H,MAAK,SAAAC,GAAG,OACPiH,EAAgBjH,MAAMQ,QAG1B,OACE,yBAAK+I,UAAWhD,EAAQjE,MACtB,kBAACkI,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEjG,SAAS,QACT+E,UAAWmB,YAAKnE,EAAQ/D,OAAT,eACZ+D,EAAQvD,YAAc0D,KAGzB,kBAACiE,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAY5B,QAAQ,KAAKwC,QAAM,EAACrB,UAAWhD,EAAQlD,OAAnD,4BAGA,mBA5hBN,SAAoB2E,GAClB,OAAGlB,GAAaF,EAGZ,yBAAK2C,UAAWhD,EAAQ3E,QACtB,kBAACiJ,EAAA,EAAD,CACEC,YAAY,SACZvE,QAAS,CACPjE,KAAMiE,EAAQwE,UACdC,MAAOzE,EAAQlB,YAEjB4F,WAAY,CAAE,aAAe,UAC7Bb,SAAU,SAAAc,GAAMtJ,GAASsJ,EAAEnC,OAAOC,UAKnC,OA2gBH,MACA,mBAzgBN,WACE,OAAGlC,GAAaF,EAEZ,kBAACyC,EAAA,EAAD,CAAYC,KAAK,QACfC,UAAWhD,EAAQ4E,aACnB3B,aAAW,SACXnB,QAASC,IACD,kBAAC,IAAD,OAGA,OA+fV,MACA,yBAAKiB,UAAWhD,EAAQtB,OACxB,mBAncR,WAA4B,IAAD,EACOuB,IAAMC,SAAS,MADtB,mBAClBwC,EADkB,KACRC,EADQ,KAGrBV,EAAY,GACZC,EAAW,GACXzH,EAAQ,GACR0H,EAAQ,GAONS,EAAc,WAClBD,EAAY,OAmBRxC,EAAO0C,QAAQH,GACfnH,EAAK4E,EAAO,sBAAmBtF,EACrC,OAAI0F,EAEF,6BACE,kBAACsE,EAAA,EAAD,CAAKlF,MAAM,UAAWsD,aAAW,MAAMD,UAAWhD,EAAQV,IAAKwC,QA9B/C,SAACS,GACnBI,EAAYJ,EAAMW,eAClB/I,QAAQC,IAAIsI,KA6BR,kBAAC,IAAD,OAKF,kBAACS,EAAA,EAAD,CACE5H,GAAIA,EACJ4E,KAAMA,EACNuC,SAAUA,EACVU,QAASR,EACTS,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAGd,yBAAKP,UAAWhD,EAAQF,MACtB,kBAAC2D,EAAA,EAAD,CAAY5B,QAAQ,KAAKmB,UAAWhD,EAAQd,YAA5C,mBACA,kBAACwE,EAAA,EAAD,CACEC,MAAM,aACNC,KAAK,OACL9F,OAAO,SACP+F,SAAU,SAAAc,GAAM1C,EAAY0C,EAAEnC,OAAOC,SAEvC,kBAACiB,EAAA,EAAD,CACAC,MAAM,YACNC,KAAK,OACL9F,OAAO,SACP+F,SAAU,SAAAc,GAAMzC,EAAWyC,EAAEnC,OAAOC,SAEpC,kBAACiB,EAAA,EAAD,CACAC,MAAM,eACNC,KAAK,OACL9F,OAAO,SACP+F,SAAU,SAAAc,GAAMxC,EAAQwC,EAAEnC,OAAOC,SAEjC,kBAACiB,EAAA,EAAD,CACAC,MAAM,QACNC,KAAK,OACL9F,OAAO,SACP+F,SAAU,SAAAc,GAAMlK,EAAQkK,EAAEnC,OAAOC,SAEjC,kBAACqB,EAAA,EAAD,CACFjC,QAAQ,YACRlC,MAAM,UACNmC,QAtEmB,WAMhBG,GAAcC,IAEPC,GAGVhH,GATU,CAAC8G,UAAWA,EACdC,SAAUA,EACVzH,MAAOA,EACP0H,MAAOA,IAOd3I,KAAKoJ,GAAa3I,WAuDjB,UAaC,OAkWH,MACA,kBAAC6I,EAAA,EAAD,CACEnD,MAAM,UACNsD,aAAW,cACX6B,KAAK,MACLhD,QAvqBV,WACE1B,GAAQ,IAuqBA4C,UAAWmB,YAAKhE,GAAQH,EAAQhD,OAEhC,kBAAC,IAAD,SAIN,0BACEgG,UAAWmB,YAAKnE,EAAQjC,QAAT,eACZiC,EAAQhC,aAAemC,KAG1B,yBAAK6C,UAAWhD,EAAQ5C,eACxB,mBAvgBN,SAAuBqE,GAErB,OADIX,IAAQ3G,QAAQC,IAAI0G,IACrBP,GAAaF,GAEJO,GAAY,IAEhBmE,KAAI,SAACC,EAAKC,GAAN,OACN,yBAAKjC,UAAWhD,EAAQjB,gBAAiBmG,IAAKF,EAAKjB,KACjD,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACd/J,GAAG,kBAEH,kBAACkI,EAAA,EAAD,CAAYT,UAAWhD,EAAQhB,kBAC5BgG,EAAK/C,UADR,IACoB+C,EAAK9C,UAEzB,yBAAKc,UAAWhD,EAAQtB,QAE1B,kBAAC6G,EAAA,EAAD,MAEA,kBAACC,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,CAAYT,UAAWhD,EAAQtB,MAA/B,UACUsG,EAAKvK,MADf,IACsB,6BADtB,UAEUuK,EAAK7C,OAEf,kBAACH,GAAD,CAAa5G,QAAS4J,IACtB,kBAAClC,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWhD,EAAQR,oBAAqByD,aAAW,UAC1E,kBAAC,IAAD,CAAYnB,QAAS,SAAA6C,GAAC,OAWRZ,EAXgCiB,EAAKjB,SAYjEtI,GAAkBsI,GACjBvK,MAAK,SAAAC,GACJa,GAAe0G,IACdxH,MAAK,SAAAC,GACJoH,GAAYpH,MACXQ,QACL8G,IAAWD,OACV7G,QARH,IAA8B8J,YAHrB,OAmeH,MACA,mBAhGN,SAA4BtC,GAC1B,OAAIhB,GAAcF,GAAaF,EAG3B,kBAACoF,EAAA,EAAD,CACApC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdpD,KAAMA,EACNuF,aAAc,CACZ,mBAAoB,cAEtB1C,UAAWhD,EAAQJ,eACnB+F,QAAS,0BAAMpK,GAAG,cAAT,uCAmBV,6BACC,0BAAMqK,SAAS,KAAK5C,UAAWhD,EAAQlD,MAAOvB,GAAG,cAAjD,sCACF,kBAACmI,EAAA,EAAD,CACEnI,GAAG,gBACHoI,MAAM,oBACNX,UAAWhD,EAAQP,eACnB3B,OAAO,SACP+D,QAAQ,WACRgC,SAAU,SAAAc,GAAMrD,GAAYqD,EAAEnC,OAAOC,MAAOtI,QAAQC,IAAIkH,KACxDuE,WAAY,CACV7C,UAAWhD,EAAQN,kBAGvB,kBAACoE,EAAA,EAAD,CAAQ8B,SAAS,YAAY5C,UAAWhD,EAAQnC,OAAQiE,QAASkC,IAAjE,YAMK,OA4CH,OAEF,kBAAC8B,EAAA,EAAD,CACE9C,UAAWhD,EAAQ/C,OACnB4E,QAAQ,aACRkE,OAAO,QACP5F,KAAMA,EACNH,QAAS,CACPgG,MAAOhG,EAAQ7C,cAGjB,yBAAK6F,UAAWhD,EAAQ5C,cACxB,kBAACqG,EAAA,EAAD,CAAY5B,QAAQ,KAAKwC,QAAM,EAACrB,UAAWhD,EAAQlD,OACjDyD,EAAa,UAAWF,EAAc,eAAiB,4BAEzD,yBAAK2C,UAAWhD,EAAQtB,OAExB,mBAlRS,SAAC+C,IACVL,IAAYN,IAAQ3G,QAAQC,IAAI0G,IADZ,MAGIb,IAAMC,SAAS,CACvC/G,SAAU+H,GAAK/H,SACfsB,MAAOyG,GAAKzG,QALQ,mBAGjB2H,EAHiB,KAGTC,EAHS,KAQhBC,EAAe,SAACZ,GAAD,OAAU,SAACa,GAC9BF,EAAU,MAAKD,EAAN,eAAeV,EAAOa,EAAMC,OAAOC,WAI1CzC,EAAUrE,KAbQ,EAeQsE,IAAMC,SAAS,MAfvB,mBAejBwC,EAfiB,KAePC,EAfO,KAuBlBC,EAAc,WAClBD,EAAY,OAqBRxC,EAAO0C,QAAQH,GACfnH,EAAK4E,EAAO,sBAAmBtF,EACrC,OAAI0F,EAEA,6BACE,kBAACsE,EAAA,EAAD,CAAKlF,MAAM,YAAYoD,KAAK,QAAQE,aAAW,OAAOD,UAAWhD,EAAQV,IAAKwC,QAhChE,SAACS,GACnBI,EAAYJ,EAAMW,eAClB/I,QAAQC,IAAIsI,KA+BN,kBAAC,IAAD,OAEF,kBAACS,EAAA,EAAD,CACE5H,GAAIA,EACJ4E,KAAMA,EACNuC,SAAUA,EACVU,QAASR,EACTS,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAGd,yBAAKP,UAAWhD,EAAQF,MACtB,kBAAC2D,EAAA,EAAD,CAAY5B,QAAQ,KAAKmB,UAAWhD,EAAQd,YAA5C,kBACA,kBAACwE,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAOjJ,SACd0K,SAAUvB,EAAa,cAEzB,kBAACoB,EAAA,EAAD,CACAC,MAAM,QACNC,KAAK,OACL9F,OAAO,SACP2E,MAAOL,EAAO3H,MACdoJ,SAAUvB,EAAa,WAEvB,kBAACwB,EAAA,EAAD,CACAjC,QAAQ,YACRlC,MAAM,UACNmC,QA3Da,WACrB,IACIlI,EAAO,CAACT,SAAUiJ,EAAOjJ,SACjBsB,MAAO2H,EAAO3H,OACtBN,QAAQC,IAAIR,GACZgB,GAAehB,GACdJ,MAAK,SAAAC,GACJkB,KACGnB,MAAK,SAAAC,GACJ0H,GAAQ1H,GACR+G,GAAa,MACZvG,QAEH2I,OAED3I,UAyCC,aAUO,OAqLb,OAEA,kBAACsL,EAAA,EAAD,MACA,mBAlpBN,SAAkB9D,GAChB,OAAKlB,EAaE,KAZE,kBAACmD,EAAA,EAAD,CACHnI,GAAG,0BACHoI,MAAM,WACNX,UAAWhD,EAAQrC,UACnBiG,KAAK,WACLlC,KAAK,WACLuE,aAAa,WACbnI,OAAO,SACP+D,QAAQ,WACRgC,SAAU,SAAAc,GAAMxL,GAAWwL,EAAEnC,OAAOC,WAuoBtC,MACA,kBAACjB,GAAD,CAAWE,KAAK,aAChB,mBAlnBN,SAAeD,GACb,OAAKlB,GAAcF,EAaZ,KAZE,kBAACqD,EAAA,EAAD,CACHnI,GAAG,uBACHoI,MAAM,QACNX,UAAWhD,EAAQrC,UACnBiG,KAAK,QACLlC,KAAK,QACLuE,aAAa,QACbnI,OAAO,SACP+D,QAAQ,WACRgC,SAAU,SAAAc,GAAMlK,GAAQkK,EAAEnC,OAAOC,WAumBnC,MACA,kBAACjB,GAAD,CAAWE,KAAK,UAChB,mBAroBN,SAAkBD,GACd,OAAKlB,EAaE,KAZE,kBAACmD,EAAA,EAAD,CACPnI,GAAG,0BACHoI,MAAM,WACNX,UAAWhD,EAAQrC,UACnBiG,KAAK,WACLqC,aAAa,mBACbnI,OAAO,SACP+D,QAAQ,WACRgC,SAAU,SAAAc,GAAMvL,GAAWuL,EAAEnC,OAAOC,WA2nBpC,MACA,kBAACjB,GAAD,CAAWE,KAAK,aAChB,mBA1LN,SAAkBD,GAChB,GAAIlB,GAAaF,EACjB,CACE,IAAI6F,EAAM,CAACvC,MAAO,WAAWjC,KAAM,WAAYyE,IAAKjF,GAAK/H,UACrDsB,EAAQ,CAACkJ,MAAO,QAAQjC,KAAM,QAASyE,IAAKjF,GAAKzG,OAGrD,MAFY,CAACyL,EAAKzL,GAGVsK,KAAI,SAACC,GAAD,OACV,kBAACtB,EAAA,EAAD,CACEnI,GAAG,2BACHoI,MAAOqB,EAAKrB,MACZyC,aAAcpB,EAAKmB,IACnBnD,UAAWhD,EAAQrC,UACnBG,OAAO,SACP+H,WAAY,CACVQ,UAAU,QAMlB,OAAO,OAoKH,MACA,mBAlKN,SAAwB5E,GACtB,GAAIlB,GAAaF,EACjB,CACE,IAAIiG,EAAgBpF,GAAKT,WAGzB,OAFIA,IACF6F,EAAgB,QAEhB,kBAAC5C,EAAA,EAAD,CACEnI,GAAG,2BACHoI,MAAM,iBACNyC,aAAcE,EACdtD,UAAWhD,EAAQrC,UACnBG,OAAO,SACP+H,WAAY,CACVQ,UAAU,KAKlB,OAAO,OA+IH,MACA,mBA7IN,SAA0B5E,GACxB,OAAGlB,GAAaF,IAAeI,EAG3B,kBAACkB,EAAA,EAAD,CACIC,UAAU,SACVC,QAAQ,QACRC,QAAU/G,MAHd,mCASG,OAgIH,MACA,kBAAC+I,EAAA,EAAD,CACEjC,QAAQ,YACRlC,MAAM,UACNqD,UAAWhD,EAAQnC,OACnBiE,QA5sBR,WACEnB,EAAS,IACLJ,GACAY,GAAQ,IACVX,GAAa,GACb5H,IAAIoB,UACKqG,EAETnH,GAAMC,GAASC,IACdI,MAAK,SAAAC,GACC8M,OAAOC,KAAK/M,EAAIF,OAAOkN,OAU1B9F,EAASlH,EAAIF,QATbY,QAAQC,IAAI,cACZO,KACCnB,MAAK,SAAAC,GACJ0H,GAAQ1H,GACRiH,EAAgBjH,EAAIgH,eACnBjH,KAAKgH,GAAa,IACrBa,IAAaD,IACbsF,OAAOC,SAASC,QAAO,OAK1B3M,OAAM,SAAAC,GACLyG,EAAS,CAACvH,SAAU,0BAGtBoB,GAASrB,GAAUsB,GAAOrB,IACzBI,MAAK,SAAAC,GACC8M,OAAOC,KAAK/M,EAAIF,OAAOkN,OAI1B9F,EAASlH,EAAIF,QAHbY,QAAQC,IAAI,cACZkG,GAAc,OAKjBrG,UA0qBKsG,EAAa,SAAWF,EAAc,QAAU,YAEpD,kBAACkF,EAAA,EAAD,MACA,kBAAC5D,EAAA,EAAD,CACEC,UAAU,SACVC,QAAQ,QACRC,QAAWvB,EAAa,KAAKgB,IAE7BhB,EAAa,GAAIF,EAAc,iCAAmC,oC,IC/wB7DwG,G,iLATX,OACE,kBAAC,IAAD,KACE,yBAAK7D,UAAU,OACb,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAInF,UAAWoF,W,GALzBC,aCGlBC,IAASpG,OACL,kBAAC,GAAD,MACAqG,SAASC,eAAe,W","file":"static/js/main.bb5f9738.chunk.js","sourcesContent":["import {isEmail} from 'validator'\nimport axios from 'axios'\nimport JWT from 'jwt-client'\n\nvar token = JWT.get()\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\nvar Login = async(username,password) => {\n    var Res = {Error: {}}\n    if (!username) {\n        Res.Error.username = 'Please enter your username'\n    } else {\n        await axios.get(`user/username/${username}`)\n        .then(async res => {\n            if (!res.data.exists) {\n                Res.Error.username = 'Username does not exist'\n            } else if (!password) {\n                Res.Error.password = 'Please enter your password'\n            } else {\n                // login\n                var user = {username: username, password: password}\n                await axios.post('user/login', user)\n                .then(res => {\n                    if (res.data.token) if (JWT.validate(res.data.token)) {\n                        JWT.keep(res.data.token);\n                      } else {\n                        JWT.forget();\n                      };\n                })\n                .catch(err => {\n                    Res.Error.password = 'Incorect Password'\n                    return Res\n                })\n            }\n            return Res\n            })\n        .catch(err => {\n            console.log(';(')\n            console.error(err)\n        })\n    } \n    searchContacts()\n    return Res\n}\n\nvar usernameFree = async (username) => {\n    var Res \n    await axios.get(`user/username/${username}`)\n        .then(res => {\n            if (res.data.exists) {\n                Res = res.data.exists\n            } else Res = false\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar Register = async(username, email, password) => {\n    var Res = {Error: {}}\n    if (!username) {\n        Res.Error.username = 'Please enter your username'\n    } else {\n        await axios.get(`user/username/${username}`)\n        .then(async res => {\n            if (res.data.exists) {\n                Res.Error.username = 'Username is taken'\n            } else if (!email || !isEmail(email)) {\n                Res.Error.email = 'Please enter a valid email'\n            } else if (!password) {\n                Res.Error.password = 'Please enter a password'\n            } else {\n                // register\n                var user = {username: username, email: email, password: password}\n                await axios.post('user/register', user)\n                .then(res => {\n                    console.log('succcess')\n                })\n                .catch(err => {\n                    Res.Error.password = 'Incorect Password'\n                    return Res\n                })\n            }\n            return Res\n            })\n        .catch(err => {\n            console.log(';(')\n            console.error(err)\n        })\n    } \n    return Res\n}\n\n\n\nvar getUserInfo = async() => {\n    var Res\n    await axios.get('/user')\n        .then( res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar updateUserInfo = async (user) => {\n    var Res ={Error: {}}\n    if (user.username)\n        await usernameFree(user.username)\n            .then(async res => {\n                if (res) {\n                    Res.Error = 'Username already taken'\n                    user.username = undefined\n                    await axios.put('/user', user)\n                        .then( res => {\n                            console.log(res.data)\n                            Res.data = res.data\n                        })\n                        .catch()\n                } else {\n                    await axios.put('/user', user)\n                        .then( res => {\n                            console.log(res.data)\n                            Res.data = res.data\n                        })\n                        .catch()\n                }\n            }).catch()    \n    return Res\n}\n\nvar deleteUser = async () => {\n    var Res\n    await axios.delete('/user')\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n// returns true if user is verified\nvar isVerified = async (user) => {\n    var Res\n    await axios.get('/user/isverified', user)\n        .then( res => {\n            console.log(res.data.isVerified)\n            if (res.data.isVerified)\n                return res.data.isVerified\n            Res = false\n        })\n        .catch()\n    return Res\n}\n\nvar sendVerificationEmail = async () => {\n    var Res\n    await axios.get('/user/verify')\n        .then( res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n}\n\n// returns true if correct code\nvar verifyUser = async (code) => {\n    var Res\n    await axios.put('/user/verify',{code: code})\n        .then( res => {\n            console.log(!!res.data.n)\n            Res = !!res.data.n\n        })\n        .catch()\n    return Res\n}\n\n\n\nvar addContact = async (contact) => {\n    var Res\n    await axios.post('/contacts', contact)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar getAllContacts = async () => {\n    var Res\n    await axios.get('/contacts')\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch()\n    return Res\n}\n\nvar searchContacts = async (search) => {\n    var Res\n    await axios.post('/contacts/search', {search: search})\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n        return Res\n}\n\nvar getContactById = async (id) => {\n    var Res\n    await axios.get(`/contacts/id/${id}`,)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar updateContactById = async (id, body) => {\n    var Res\n    await axios.put(`/contacts/id/${id}`, body)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nvar deleteContactById = async (id) => {\n    var Res\n    await axios.delete(`/contacts/id/${id}`)\n        .then(res => {\n            console.log(res.data)\n            Res = res.data\n        })\n        .catch(err => console.log)\n    return Res\n}\n\nexport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\n    isVerified, sendVerificationEmail, verifyUser, addContact,\n    getAllContacts, searchContacts, getContactById, updateContactById,\n    deleteContactById }","import {\n    fade,\n    makeStyles,\n    Theme,\n    createStyles\n  } from \"@material-ui/core/styles\";\n   import { amber, green } from '@material-ui/core/colors';\n\n  \nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: drawerWidth\n    },\n    title: {\n      flexGrow: 0\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-start\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginRight: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: 0\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      }\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 1),\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: 200\n      }\n    },\n    expansionWidith: {\n      width: \"100%\"\n    },\n    expansionHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    contactDeleteButton: {\n      margin: theme.spacing(0),\n    },\n    emailTextField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    emailCodeInput: {\n      color: \"white\"\n    },\n    emailBackgound: {\n      backgroundColor: green[600]\n    },\n    div1: {\n      padding: theme.spacing(1, 1, 1, 7),\n      width:300\n    },\n      \n  })\n);\n\nexport default useStyles","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n    Drawer,     AppBar,         Button,\n    Toolbar,    CssBaseline,    Link,\n    Typography, TextField,      ExpansionPanel,\n    Divider,    IconButton,     InputBase,\n    Fab,        Snackbar,       Popover,\n} from '@material-ui/core'\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport JWT from 'jwt-client'\n\n\nimport { Login, Register, getUserInfo, updateUserInfo, deleteUser,\n    isVerified, sendVerificationEmail, verifyUser, addContact,\n    getAllContacts, searchContacts, getContactById, updateContactById,\n    deleteContactById } from './auth'\nimport useStyles from './drawerStyle'\nimport { set } from \"mongoose\";\n\n\nexport default function PersistentDrawerRight() {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const [hasAccount, setHasAccount] = React.useState(true)\n  const [isLogedIn, setIsLogedIn] = React.useState(false)\n  const [editable, setEditable] = React.useState(true)\n  const [isVerified, setVerification] = React.useState(true)\n  const [Error, setError] = React.useState({})\n  const [contacts, setContacts] = React.useState([])\n  const [render, setRender] = React.useState(true)\n  const [lastSearch, setLastSearch] = React.useState('')\n  const [User, setUser] = React.useState({})\n  const [saveUser, setSaveUser] = React.useState(true)\n  const [ready, setReady] = React.useState(false)\n  const [reRender, setReRender] = React.useState(false)\n  \n\n  if (JWT.validate(JWT.get()) && !isLogedIn){\n    getUserInfo()\n      .then(res => {\n        setUser(res)\n        setVerification(res.isVerified)\n      }).then(setIsLogedIn(true)).catch()\n  }\n  var password =''\n  var username =''\n  var email = ''\n  var search = ''\n  var emailCode = ''\n\n\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n\n\n  function handleSubmit() {\n    setError({})\n    if (isLogedIn) { // Logout\n        setUser({})\n      setIsLogedIn(false)\n      JWT.forget()\n    } else if (hasAccount){ // Login\n\n      Login(username,password)\n      .then(res => {\n        if (!Object.keys(res.Error).length) {\n          console.log('logging in')\n          getUserInfo()\n          .then(res => {\n            setUser(res)\n            setVerification(res.isVerified)\n          }).then(setIsLogedIn(true))\n          setReRender(!reRender)\n          window.location.reload(false)\n        } else {\n          setError(res.Error)\n        }\n      })\n      .catch(err => {\n        setError({password: 'Incorrect Password'})\n      })\n    } else { // Register\n      Register(username, email, password)\n      .then(res => {\n        if (!Object.keys(res.Error).length) {\n          console.log('Registered')\n          setHasAccount(true)\n        } else {\n          setError(res.Error)\n        }\n      })\n      .catch()\n    }\n}\n\n  function toggleHasAccount() {\n      setError({})\n      setHasAccount(!hasAccount)\n  }\n\n  function Username(props) {\n    if (!isLogedIn){\n      return <TextField\n          id=\"outlined-Username-input\"\n          label=\"username\"\n          className={classes.textField}\n          type=\"username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={e => {username = e.target.value}}\n          />;\n    } \n    return null;  \n  }\n\n  function Password(props) {\n      if (!isLogedIn){\n        return <TextField\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => {password = e.target.value}}\n        //value={password}\n      />\n      } \n      return null;  \n  }\n\n  function Email(props) {\n    if (!isLogedIn && !hasAccount){\n      return <TextField\n          id=\"outlined-email-input\"\n          label=\"email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={e => {email = e.target.value}}\n          />;\n    } \n    return null;  \n}\n\n  function ErrorLink (props) {\n    if (props.name === 'username' && Error.username) \n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.username} \n            </Link>\n    if (props.name === 'email' && Error.email) \n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.email||1} \n            </Link> \n    if (props.name === 'password' && Error.password)\n      return <Link component=\"button\" color=\"error\"\n              variant=\"body2\"\n              onClick={((isLogedIn) ? null:toggleHasAccount)}\n            >\n            {Error.password} \n            </Link>\n    return null\n  }\n\n    function SearchBar (props) {\n      if(isLogedIn && hasAccount)\n      {\n        return (\n          <div className={classes.search}>\n            <InputBase\n              placeholder=\"Search\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label' : 'search' }}\n              onChange={e => {search = e.target.value}}\n            />\n          </div> \n        )\n      }\n      return null\n    }\n  \n    function SearchButton () {\n      if(isLogedIn && hasAccount) {\n        return (\n          <IconButton size=\"small\" \n            className={classes.searchButton}\n            aria-label=\"search\"\n            onClick={handleSearch}>\n                    <SearchIcon />\n                  </IconButton>\n        )\n      } else return null\n    }\n\n  function handleSearch() {\n    setLastSearch(search)\n    searchContacts(search)\n    .then(res => {\n      setContacts(res)\n    })\n    \n  }\n\n  function ContactPanel (props) {\n    if (render) console.log(render)\n    if(isLogedIn && hasAccount)\n    {\n      var con = contacts || []\n      return (\n        con.map((item,index) =>\n          <div className={classes.expansionWidith} key={item._id}>\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.expansionHeading}>\n                  {item.firstName} {item.lastName} \n                </Typography>\n                <div className={classes.grow} />\n              </ExpansionPanelSummary>\n              <Divider />\n\n              <ExpansionPanelDetails>\n                <Typography className={classes.grow}>\n                  Email: {item.email} <br></br>\n                  Phone: {item.phone}\n                </Typography>\n                <EditContact contact={item}/>\n                <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"delete\">\n                  <DeleteIcon onClick={e => handleDeleteContact(item._id, index)}/>\n                </IconButton>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </div>\n        )\n      )\n    }\n    return null\n  }\n\n  function handleDeleteContact (_id,index){\n    deleteContactById(_id)\n    .then(res => {\n      searchContacts(lastSearch)\n      .then(res => {\n        setContacts(res)\n      }).catch()\n    setRender(!render)\n  }).catch()  \n  }\n\n  function AddContactPopup() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    var firstName = ''\n    var lastName = ''\n    var email = ''\n    var phone = ''\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleAddContact = () => {\n      var Error\n      var contact = {firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phone: phone}\n        if (!firstName || !lastName){\n          Error = 'Please enter name'\n        } else if (!phone) {\n          Error = 'Please enter a phone number'\n        } else {\n          addContact(contact)\n          .then(handleClose).catch()\n        }\n    }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    if (isLogedIn) {\n    return (\n      <div>\n        <Fab color=\"primary\"  aria-label=\"add\" className={classes.fab} onClick={handleClick}>\n          <AddIcon />\n        </Fab>\n        {/* <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n          Open Popover\n        </Button> */}\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <div className={classes.div1}>\n            <Typography variant=\"h6\" className={classes.typography}>Add New Contact</Typography>\n            <TextField \n              label=\"First name\"\n              type=\"text\"\n              margin=\"normal\"\n              onChange={e => {firstName = e.target.value}}\n              />\n            <TextField\n            label=\"Last name\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {lastName = e.target.value}}\n            />\n            <TextField\n            label=\"Phone number\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {phone = e.target.value}}\n            />\n            <TextField\n            label=\"Email\"\n            type=\"text\"\n            margin=\"normal\"\n            onChange={e => {email = e.target.value}}\n            />\n            <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleAddContact}\n          >\n            ADD\n          </Button>\n          </div>\n          \n        </Popover>\n      </div>\n    )\n    } else {\n      return null\n    }\n  }\n\n  var EditContact = (props) => {\n    var contact = props.contact\n    \n    const [values, setValues] = React.useState({\n        firstName: contact.firstName,\n        lastName: contact.lastName,\n        email: contact.email,\n        phone: contact.phone,\n      });\n    \n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [name]: event.target.value });\n      };\n\n    \n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleEditContact = () => {\n      var Error\n      var contact = {firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  phone: values.phone}\n          console.log(contact)\n          updateContactById(props.contact._id, contact )\n          .then(res => {\n            handleClose()\n            searchContacts(lastSearch)\n              .then(res => {\n                setContacts(res)\n              }).catch()\n            setRender(!render)\n          }).catch()\n    }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n      <div>\n        <IconButton size=\"small\" className={classes.contactDeleteButton} aria-label=\"edit\">\n                  <EditIcon onClick={handleClick}/>\n         </IconButton>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n        >\n          <div className={classes.div1}>\n            <Typography variant=\"h6\" className={classes.typography}>Edit Contact</Typography>\n            <TextField \n              label=\"First name\"\n              type=\"text\"\n              margin=\"normal\"\n              value={values.firstName}\n              onChange={handleChange('firstName')}\n              />\n            <TextField\n            label=\"Last name\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.lastName}\n            onChange={handleChange('lastName')}\n            />\n            <TextField\n            label=\"Phone number\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.phone}\n              onChange={handleChange('phone')}\n            />\n            <TextField\n            label=\"Email\"\n            type=\"text\"\n            margin=\"normal\"\n            value={values.email}\n            onChange={handleChange('email')}\n            />\n            <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={handleEditContact}\n            >\n            Commit\n          </Button>\n          </div>  \n        </Popover>\n      </div>\n    )\n  }\n\n  var EditUser = (props) => {\n    if (reRender|| !render) console.log(render)\n    \n    const [values, setValues] = React.useState({\n        username: User.username,\n        email: User.email,\n      });\n    \n      const handleChange = (name) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [name]: event.target.value });\n      };\n\n    \n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n  \n    const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setAnchorEl(event.currentTarget);\n      console.log(anchorEl)\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const handleEditUser = () => {\n      var Error\n      var user = {username: values.username,\n                  email: values.email}\n          console.log(user)\n          updateUserInfo(user)\n          .then(res => {\n            getUserInfo()\n              .then(res => {\n                setUser(res)\n                setIsLogedIn(true)\n              }).catch()\n            //if (!Object.keys(res.Error).length) {\n              handleClose()\n            //} else Error = res.Error\n          }).catch()\n        }\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    if (isLogedIn) {\n      return (\n        <div>\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"edit\" className={classes.fab} onClick={(handleClick)}>\n            <EditIcon />\n          </Fab>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n          >\n            <div className={classes.div1}>\n              <Typography variant=\"h6\" className={classes.typography}>Edit User Info</Typography>\n              <TextField \n                label=\"Username\"\n                type=\"text\"\n                margin=\"normal\"\n                value={values.username}\n                onChange={handleChange('username')}\n                />\n              <TextField\n              label=\"Email\"\n              type=\"text\"\n              margin=\"normal\"\n              value={values.email}\n              onChange={handleChange('email')}\n              />\n              <Button \n              variant=\"contained\" \n              color=\"primary\" \n              onClick={handleEditUser}\n              >\n              Commit\n            </Button>\n            </div>  \n          </Popover>\n        </div>\n      )} else return null\n  }\n\n  // TODO Get proper object for mapping\n  function Options (props) {\n    if (isLogedIn && hasAccount)\n    {\n      var usr = {label: \"Username\",name: 'username', val: User.username} \n      var email = {label: \"Email\",name: 'email', val: User.email}\n      var lists = [usr, email]\n      var bool = editable\n      return (\n        lists.map((item) =>\n        <TextField\n          id=\"standard-read-only-input\"\n          label={item.label}\n          defaultValue={item.val}\n          className={classes.textField}\n          margin=\"normal\"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        )\n      )\n    }\n    return null\n  }\n\n  function VerifiedEmail (props) {\n    if (isLogedIn && hasAccount)\n    {\n      var isVerifiedStr = User.isVerified\n      if (isVerified)\n        isVerifiedStr = \"True\"\n      return (\n        <TextField\n          id=\"standard-read-only-input\"\n          label=\"Verified Email\"\n          defaultValue={isVerifiedStr}\n          className={classes.textField}\n          margin=\"normal\"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n      )\n    }\n    return null\n  }\n\n  function VerifyEmailLink (props) {\n    if(isLogedIn && hasAccount && !isVerified)\n    {\n      return (\n        <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={(sendVerificationEmail())}\n          >\n            Click here to verify your email\n          </Link>\n      )\n    }\n    return null\n  }\n\n  // TODO accept verification code to update user's verification\n  function VerifyEmailBanner (props) {\n    if(!isVerified && isLogedIn && hasAccount)\n    {\n      return (\n        <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        className={classes.emailBackgound}\n        message={<span id=\"message-id\">Enter your email verification code</span>}\n        // action={[\n        //   <div>\n        //   <TextField\n        //     id=\"outlined-name\"\n        //     label=\"Email Verify Code\"\n        //     className={classes.emailTextField}\n        //     margin=\"normal\"\n        //     variant=\"outlined\"\n        //     onChange={e => {emailCode = e.target.value; console.log(emailCode)}}\n        //     InputProps={{\n        //       className: classes.emailCodeInput\n        //     }}\n        //   />\n        //   <Button vartiant=\"contained\" className={classes.button} onClick={handleVerifyClick}>\n        //     Verify\n        //   </Button>\n        //   </div>\n        // ]}\n      ><div>\n        <span vartiant=\"h6\" className={classes.title} id=\"message-id\">Enter your email verification code</span>\n      <TextField\n        id=\"outlined-name\"\n        label=\"Email Verify Code\"\n        className={classes.emailTextField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => {emailCode = e.target.value; console.log(emailCode)}}\n        InputProps={{\n          className: classes.emailCodeInput\n        }}\n      />\n      <Button vartiant=\"contained\" className={classes.button} onClick={handleVerifyClick}>\n        Verify\n      </Button>\n      </div></Snackbar>\n      )\n    }\n    return null\n  }\n\n  function handleVerifyClick () {\n    verifyUser(emailCode)\n    .then(res => \n      setVerification(res)).catch()\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            COP 4331 Contact Manager\n          </Typography>\n          < SearchBar />\n          <SearchButton />\n          <div className={classes.grow} />\n          <AddContactPopup />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <ContactPanel />\n        <VerifyEmailBanner />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n        <Typography variant=\"h6\" noWrap className={classes.title}>\n        {(isLogedIn) ? 'Welcome':(hasAccount) ? 'Please Login' : 'Please Create an Account'}\n        </Typography>\n        <div className={classes.grow} />\n        {/* <EditOptions /> */}\n        <EditUser />\n        </div>\n        <Divider />\n        <Username />\n        <ErrorLink name='username'/>\n        <Email />\n        <ErrorLink name='email'/>\n        <Password />\n        <ErrorLink name='password'/>\n        < Options />\n        <VerifiedEmail />\n        <VerifyEmailLink />\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          className={classes.button}\n          onClick={(handleSubmit)}\n          >\n          {(isLogedIn) ? 'Logout': (hasAccount) ? 'Login' : 'Register'}\n        </Button>\n        <Divider />\n        <Link\n          component=\"button\"\n          variant=\"body2\"\n          onClick={((isLogedIn) ? null:toggleHasAccount)}\n        >\n        {(isLogedIn) ? '':(hasAccount) ? 'Dont have an account? Register' : 'Already have an account? Login'} \n        </Link>\n        \n      </Drawer>\n    </div>\n  );\n\n      }","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Pieces from './components/Pieces'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Pieces} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\n//import Clock from './components/clock'\n//import Login from './components/Login'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}